{"version":3,"sources":["volt.js","lasair_datatables.js","lasair_js9.js","fitsview_init.js","fitsview.js","lasair_utils.js","lasair_fixes.js"],"names":["d","document","addEventListener","event","Swal","mixin","customClass","confirmButton","cancelButton","buttonsStyling","themeSettingsCollapse","themeSettingsEl","getElementById","themeSettingsExpandEl","bootstrap","Collapse","show","toggle","window","localStorage","getItem","classList","remove","hide","add","setItem","setTimeout","breakpoints","sm","md","lg","xl","sidebar","iconNotifications","body","clientWidth","querySelector","style","position","slice","call","querySelectorAll","map","el","background","getAttribute","color","tooltipTriggerEl","Tooltip","popoverTriggerEl","Popover","Datepicker","buttonClass","slider","sliderId","minValue","maxValue","sliderValue","sliderValueId","startValue","c","noUiSlider","create","start","parseInt","connect","range","min","max","low","e","f","tooltips","on","a","b","textContent","Chartist","Line","labels","series","showArea","fullWidth","plugins","tooltip","axisX","showGrid","axisY","showLabel","labelInterpolationFnc","value","Bar","offset","data","type","element","animate","begin","index","dur","from","path","clone","scale","translate","chartRect","height","stringify","to","easing","Svg","Easing","easeOutQuint","sum","Pie","Math","round","reduce","high","donut","donutWidth","donutSolid","button","this","loadContent","allLoaded","setAttribute","display","SmoothScroll","speed","speedAsDuration","Date","getFullYear","Glide","startAt","perView","mount","autoplay","billingSwitchEl","countUpStandard","countUp","CountUp","startVal","countUpPremium","billingSwitch","checked","reset","dataTableEl","simpleDatatables","DataTable","let","dataTableEls","forEach","tableId","perPage","hasAttribute","id","dataTable","placeholder","noRows","info","layout","top","bottom","perPageSelect","headings","columns","dt","includes","idx","indexOf","sort","CSS","escape","dataset","filename","columnDelimiter","replacer","space","export","loadtype","lastid","ndiv","nwin","fixJS9ExtraStyles","next","fitsImgs","fits","checkExist","setInterval","im","$","length","clearInterval","JS9","LookupDisplay","ResizeDisplay","width","checkExist2","plugin","offsetWidth","checkExist3","loadFitsImages","allFits","fitsScr","newItem","createElement","uuid","uuidv4","innerHTML","contains","parentNode","replaceChild","Preload","zoom","flip","onload","setDefaultParams","collapseJS9Extras","myCollapse","SetZoom","SetColormap","SetScale","AddRegions","radius","replace","crypto","getRandomValues","Uint8Array","toString","toggleJS9Menus","preventDefault","menus","getElementsByClassName","i","JS9Popout","file","opts","dobj","myopts","LoadWindow","RefreshImage","scrollToTop","history","scrollRestoration","scrollTo","globalOpts","alerts","updateTitlebar","lightWinClose","helperType","helperPort","imageOpts","inherit","contrast","bias","invert","exp","colormap","overlay","scaleclipping","scalemin","Number","NaN","scalemax","rot90","rotate","zscalecontrast","zscalesamples","zscaleline","wcssys","lcs","valpos","sigma","opacity","alpha","nancolor","nocolor","red","green","blue","zooms","topZooms","wcsalign","rotationMode","crosshair","disable","ltvbug","listonchange","whichonchange","fns","chain","fn","shift","fits_url","NROIS","gebi","start_fitsview","_fits","_fits_url","console","log","stretch_sel","setStretch","addROIChangedHandler","onROIChange","onunload","header_win","close","imageFromUrl","showHeader","newContrast","name","target","number","substring","contrast_value","setContrast","rois","onStretchSel","roi","redef","moved","eid","z","title","dh","displayStats","displayHistogram","onDisplayROI","roi_n","cb","enableROI","stats","fits_coords","image2FITS","minat_coords","minat","maxat_coords","maxat","pad","x","y","toFixed","mean","stddev","median","s","n","nadd","FITS","div_id","n_rois","tagName","isNaN","thisfits","roicolors","createResizeListener","addResizeListener","handleResize","Array","enabled","black","undefined","white","cvs","FITS_newCanvas","ctx","getContext","gcvs","gctx","FITS_handleMouse","FITS_handleKeyboard","icroi","image","header","rawheader","drew_glass","glass_size","glass_mag","glass_mic","mic","resize_scale","stretch","userMouseHandler","userROIChangedHandler","userGlassCanvas","drag_roi","drag_code","drag_mvos","dx","dy","cursors","n-resize","s-resize","e-resize","w-resize","ne-resize","sw-resize","nw-resize","se-resize","move","parent","cid","appendChild","showGlass","shiftKey","event2image","noSmoothing","imageSmoothingEnabled","mozImageSmoothingEnabled","raf","cancel","attachEvent","isIE","navigator","userAgent","match","requestFrame","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","cancelFrame","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","clearTimeout","resizeListener","win","srcElement","__resizeRAF__","trigger","__resizeTrigger__","__resizeListeners__","objectLoad","contentDocument","defaultView","__resizeElement__","obj","getComputedStyle","push","removeResizeListener","splice","detachEvent","removeEventListener","removeChild","copy","text","fadeOut","input","result","select","execCommand","prototype","xhr","XMLHttpRequest","response","status","setNewImage","open","responseType","overrideMimeType","send","fitsab","hlen","byteLength","key","val","card","String","fromCharCode","apply","parseFloat","SIMPLE","NAXIS1","NAXIS2","BITPIX","npixels","nbytes","abs","bzero","BZERO","bscale","BSCALE","dv","DataView","imgi","fitsi","getUint8","getInt16","getInt32","getFloat32","force","closed","write","documentElement","computeROIStats","pxi","maxatx","maxaty","minatx","minaty","sum2","p","sqrt","histo","histomax","bin","floor","histi","count","renderROI","findBlackAndWhite","divw","divh","setTransform","renderAll","nrois","enable","redefineROI","roi_defn","stretch_f","bw","icroi_stats","pixel","v","roiimage","ImageData","roidata","datai","gray","tempcan","putImageData","clearLayer","drawImage","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","renderGlass","image_loc","glassimgsz","ulglassx","ulglassy","glassw","glassh","imw","imh","glasssz","imageloc","fitsloc","JSON","parse","FITS2Image","imgcoords","iid_rect","pageX","pageY","clientX","clientY","getBoundingClientRect","pageXOffset","left","pageYOffset","addMouseHandler","handler","addResizeHandler","addGlassCanvas","canvas_id","findROI","tolerance","on_top_edge","on_left_edge","on_right_edge","on_bottom_edge","moveROI","new_code","clearRect","getPixelAtFITS","graphw","graphh","lhmax","fillStyle","fillRect","hx","fill","medianx","meanx","blackx","whitex","myDefaultAllowList","Default","allowList","table","tr","td","th","div","tbody","thead","popover","ttDefaultAllowList","ready","$target","hover","toggleClass","hasClass"],"mappings":"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","file":"main.js","sourcesContent":["/*\n\n=========================================================\n* Volt Pro - Premium Bootstrap 5 Dashboard\n=========================================================\n\n* Product Page: https://themesberg.com/product/admin-dashboard/volt-bootstrap-5-dashboard\n* Copyright 2021 Themesberg (https://www.themesberg.com)\n\n* Designed and coded by https://themesberg.com\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. Please contact us to request a removal. Contact us if you want to remove it.\n\n*/\n\n\"use strict\";\nconst d = document;\nd.addEventListener(\"DOMContentLoaded\", function(event) {\n\n    const swalWithBootstrapButtons = Swal.mixin({\n        customClass: {\n            confirmButton: 'btn btn-primary me-3',\n            cancelButton: 'btn btn-gray'\n        },\n        buttonsStyling: false\n    });\n\n    var themeSettingsEl = document.getElementById('theme-settings');\n    var themeSettingsExpandEl = document.getElementById('theme-settings-expand');\n\n    if (themeSettingsEl) {\n\n        var themeSettingsCollapse = new bootstrap.Collapse(themeSettingsEl, {\n            show: true,\n            toggle: false\n        });\n\n        if (window.localStorage.getItem('settings_expanded') === 'true') {\n            themeSettingsCollapse.show();\n            themeSettingsExpandEl.classList.remove('show');\n        } else {\n            themeSettingsCollapse.hide();\n            themeSettingsExpandEl.classList.add('show');\n        }\n\n        themeSettingsEl.addEventListener('hidden.bs.collapse', function() {\n            themeSettingsExpandEl.classList.add('show');\n            window.localStorage.setItem('settings_expanded', false);\n        });\n\n        themeSettingsExpandEl.addEventListener('click', function() {\n            themeSettingsExpandEl.classList.remove('show');\n            window.localStorage.setItem('settings_expanded', true);\n            setTimeout(function() {\n                themeSettingsCollapse.show();\n            }, 300);\n        });\n    }\n\n    // options\n    const breakpoints = {\n        sm: 540,\n        md: 720,\n        lg: 960,\n        xl: 1140\n    };\n\n    var sidebar = document.getElementById('sidebarMenu')\n    if (sidebar && d.body.clientWidth < breakpoints.lg) {\n        sidebar.addEventListener('shown.bs.collapse', function() {\n            document.querySelector('body').style.position = 'fixed';\n        });\n        sidebar.addEventListener('hidden.bs.collapse', function() {\n            document.querySelector('body').style.position = 'relative';\n        });\n    }\n\n    var iconNotifications = d.querySelector('.notification-bell');\n    if (iconNotifications) {\n        iconNotifications.addEventListener('shown.bs.dropdown', function() {\n            iconNotifications.classList.remove('unread');\n        });\n    }\n\n    [].slice.call(d.querySelectorAll('[data-background]')).map(function(el) {\n        el.style.background = 'url(' + el.getAttribute('data-background') + ')';\n    });\n\n    [].slice.call(d.querySelectorAll('[data-background-lg]')).map(function(el) {\n        if (document.body.clientWidth > breakpoints.lg) {\n            el.style.background = 'url(' + el.getAttribute('data-background-lg') + ')';\n        }\n    });\n\n    [].slice.call(d.querySelectorAll('[data-background-color]')).map(function(el) {\n        el.style.background = 'url(' + el.getAttribute('data-background-color') + ')';\n    });\n\n    [].slice.call(d.querySelectorAll('[data-color]')).map(function(el) {\n        el.style.color = 'url(' + el.getAttribute('data-color') + ')';\n    });\n\n    //Tooltips\n    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\n    var tooltipList = tooltipTriggerList.map(function(tooltipTriggerEl) {\n        return new bootstrap.Tooltip(tooltipTriggerEl)\n    })\n\n    // Popovers\n    var popoverTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"popover\"]'))\n    var popoverList = popoverTriggerList.map(function(popoverTriggerEl) {\n        return new bootstrap.Popover(popoverTriggerEl)\n    })\n\n    // Datepicker\n    var datepickers = [].slice.call(d.querySelectorAll('[data-datepicker]'))\n    var datepickersList = datepickers.map(function(el) {\n        return new Datepicker(el, {\n            buttonClass: 'btn'\n        });\n    })\n\n    if (d.querySelector('.input-slider-container')) {\n        [].slice.call(d.querySelectorAll('.input-slider-container')).map(function(el) {\n            var slider = el.querySelector(':scope .input-slider');\n            var sliderId = slider.getAttribute('id');\n            var minValue = slider.getAttribute('data-range-value-min');\n            var maxValue = slider.getAttribute('data-range-value-max');\n\n            var sliderValue = el.querySelector(':scope .range-slider-value');\n            var sliderValueId = sliderValue.getAttribute('id');\n            var startValue = sliderValue.getAttribute('data-range-value-low');\n\n            var c = d.getElementById(sliderId),\n                id = d.getElementById(sliderValueId);\n\n            noUiSlider.create(c, {\n                start: [parseInt(startValue)],\n                connect: [true, false],\n                //step: 1000,\n                range: {\n                    'min': [parseInt(minValue)],\n                    'max': [parseInt(maxValue)]\n                }\n            });\n        });\n    }\n\n    if (d.getElementById('input-slider-range')) {\n        var c = d.getElementById(\"input-slider-range\"),\n            low = d.getElementById(\"input-slider-range-value-low\"),\n            e = d.getElementById(\"input-slider-range-value-high\"),\n            f = [d, e];\n\n        noUiSlider.create(c, {\n            start: [parseInt(low.getAttribute('data-range-value-low')), parseInt(e.getAttribute('data-range-value-high'))],\n            connect: !0,\n            tooltips: true,\n            range: {\n                min: parseInt(c.getAttribute('data-range-value-min')),\n                max: parseInt(c.getAttribute('data-range-value-max'))\n            }\n        }), c.noUiSlider.on(\"update\", function(a, b) {\n            f[b].textContent = a[b]\n        });\n    }\n\n    //Chartist\n\n    if (d.querySelector('.ct-chart-sales-value')) {\n        //Chart 5\n        new Chartist.Line('.ct-chart-sales-value', {\n            labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n            series: [\n                [0, 10, 30, 40, 80, 60, 100]\n            ]\n        }, {\n            low: 0,\n            showArea: true,\n            fullWidth: true,\n            plugins: [\n                Chartist.plugins.tooltip()\n            ],\n            axisX: {\n                // On the x-axis start means top and end means bottom\n                position: 'end',\n                showGrid: true\n            },\n            axisY: {\n                // On the y-axis start means left and end means right\n                showGrid: false,\n                showLabel: false,\n                labelInterpolationFnc: function(value) {\n                    return '$' + (value / 1) + 'k';\n                }\n            }\n        });\n    }\n\n    if (d.querySelector('.ct-chart-ranking')) {\n        var chart = new Chartist.Bar('.ct-chart-ranking', {\n            labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n            series: [\n                [1, 5, 2, 5, 4, 3],\n                [2, 3, 4, 8, 1, 2],\n            ]\n        }, {\n            low: 0,\n            showArea: true,\n            plugins: [\n                Chartist.plugins.tooltip()\n            ],\n            axisX: {\n                // On the x-axis start means top and end means bottom\n                position: 'end'\n            },\n            axisY: {\n                // On the y-axis start means left and end means right\n                showGrid: false,\n                showLabel: false,\n                offset: 0\n            }\n        });\n\n        chart.on('draw', function(data) {\n            if (data.type === 'line' || data.type === 'area') {\n                data.element.animate({\n                    d: {\n                        begin: 2000 * data.index,\n                        dur: 2000,\n                        from: data.path.clone().scale(1, 0).translate(0, data.chartRect.height()).stringify(),\n                        to: data.path.clone().stringify(),\n                        easing: Chartist.Svg.Easing.easeOutQuint\n                    }\n                });\n            }\n        });\n    }\n\n    if (d.querySelector('.ct-chart-traffic-share')) {\n        var data = {\n            series: [70, 20, 10]\n        };\n\n        var sum = function(a, b) {\n            return a + b\n        };\n\n        new Chartist.Pie('.ct-chart-traffic-share', data, {\n            labelInterpolationFnc: function(value) {\n                return Math.round(value / data.series.reduce(sum) * 100) + '%';\n            },\n            low: 0,\n            high: 8,\n            donut: true,\n            donutWidth: 20,\n            donutSolid: true,\n            fullWidth: false,\n            showLabel: false,\n            plugins: [\n                Chartist.plugins.tooltip()\n            ],\n        });\n    }\n\n    if (d.getElementById('loadOnClick')) {\n        d.getElementById('loadOnClick').addEventListener('click', function() {\n            var button = this;\n            var loadContent = d.getElementById('extraContent');\n            var allLoaded = d.getElementById('allLoadedText');\n\n            button.classList.add('btn-loading');\n            button.setAttribute('disabled', 'true');\n\n            setTimeout(function() {\n                loadContent.style.display = 'block';\n                button.style.display = 'none';\n                allLoaded.style.display = 'block';\n            }, 1500);\n        });\n    }\n\n    var scroll = new SmoothScroll('a[href*=\"#\"]', {\n        speed: 500,\n        speedAsDuration: true\n    });\n\n    if (d.querySelector('.current-year')) {\n        d.querySelector('.current-year').textContent = new Date().getFullYear();\n    }\n\n    // Glide JS\n\n    if (d.querySelector('.glide')) {\n        new Glide('.glide', {\n            type: 'carousel',\n            startAt: 0,\n            perView: 3\n        }).mount();\n    }\n\n    if (d.querySelector('.glide-testimonials')) {\n        new Glide('.glide-testimonials', {\n            type: 'carousel',\n            startAt: 0,\n            perView: 1,\n            autoplay: 2000\n        }).mount();\n    }\n\n    if (d.querySelector('.glide-clients')) {\n        new Glide('.glide-clients', {\n            type: 'carousel',\n            startAt: 0,\n            perView: 5,\n            autoplay: 2000\n        }).mount();\n    }\n\n    if (d.querySelector('.glide-news-widget')) {\n        new Glide('.glide-news-widget', {\n            type: 'carousel',\n            startAt: 0,\n            perView: 1,\n            autoplay: 2000\n        }).mount();\n    }\n\n    if (d.querySelector('.glide-autoplay')) {\n        new Glide('.glide-autoplay', {\n            type: 'carousel',\n            startAt: 0,\n            perView: 3,\n            autoplay: 2000\n        }).mount();\n    }\n\n    // Pricing countup\n    var billingSwitchEl = d.getElementById('billingSwitch');\n    if (billingSwitchEl) {\n        const countUpStandard = new countUp.CountUp('priceStandard', 99, {\n            startVal: 199\n        });\n        const countUpPremium = new countUp.CountUp('pricePremium', 199, {\n            startVal: 299\n        });\n\n        billingSwitchEl.addEventListener('change', function() {\n            if (billingSwitch.checked) {\n                countUpStandard.start();\n                countUpPremium.start();\n            } else {\n                countUpStandard.reset();\n                countUpPremium.reset();\n            }\n        });\n    }\n\n    // DATA TABLES\n    var dataTableEl = d.getElementById('datatable');\n    if (dataTableEl) {\n        const dataTable = new simpleDatatables.DataTable(dataTableEl);\n    }\n\n});\n","document.addEventListener('DOMContentLoaded', function() {\n\n    let dataTableEls = d.querySelectorAll('.datatable');\n    dataTableEls.forEach(function(dataTableEl) {\n        if (dataTableEl) {\n\n            let tableId = null;\n            if (dataTableEl.hasAttribute('id')) {\n                tableId = dataTableEl.id;\n            }\n\n            let perPage = 100;\n            if (dataTableEl.hasAttribute('data-perPage')) {\n                perPage = parseInt(dataTableEl.getAttribute('data-perPage'));\n            }\n\n            const dataTable = new simpleDatatables.DataTable(dataTableEl, {\n                labels: {\n                    placeholder: \"Search table...\",\n                    perPage: \"{select} rows per page\",\n                    noRows: \"No objects found\",\n                    info: \"Showing {start} to {end} of {rows} rows\",\n                },\n                layout: {\n                    top: \"{search}\",\n                    bottom: \"{select}{info}{pager}\"\n                },\n                perPage: perPage,\n                perPageSelect: [5, 10, 50, 100, 500, 10000]\n            });\n\n            const headings = dataTable.columns().dt.labels;\n\n            if (dataTableEl.hasAttribute('data-sort')) {\n                if (headings.includes(\"objectId\")) {\n                    const idx = headings.indexOf(\"objectId\");\n                    dataTable.columns().sort(idx, \"desc\")\n                } else if (headings.includes(\"Created\")) {\n                    const idx = headings.indexOf(\"Created\");\n                    dataTable.columns().sort(idx, \"desc\")\n                }\n            }\n\n            // console.log(dataTable.columns().dt.labels);\n\n            if (tableId !== null) {\n                document.querySelectorAll(`a[data-table=${CSS.escape(tableId)}]`).forEach(function(el) {\n                    el.addEventListener(\"click\", function(e) {\n\n                        var type = el.dataset.type;\n                        var filename = el.dataset.filename;\n\n                        if (filename == null) {\n                            filename = \"lasair-export\";\n                        }\n\n                        var data = {\n                            type: type,\n                            filename: filename,\n                        };\n\n                        if (type === \"csv\") {\n                            data.columnDelimiter = \",\";\n                        }\n\n                        if (type === \"json\") {\n                            data.replacer = null;\n                            data.space = 4;\n                        }\n\n                        dataTable.export(data);\n                    });\n                });\n            }\n        }\n\n    });\n\n});\n","var loadtype;\nvar ndiv = 0;\nvar nwin = 1;\nvar lastid;\n\ndocument.addEventListener('DOMContentLoaded', function() {\n\n    JS9.globalOpts.alerts = false;\n    JS9.globalOpts.updateTitlebar = false;\n    JS9.globalOpts.lightWinClose = \"close\";\n    JS9.globalOpts.helperType = \"none\";\n    JS9.globalOpts.helperPort = 3333;\n\n    JS9.imageOpts = {\n        inherit: false, // inherit props from previous image?\n        contrast: 1.0, // default color contrast\n        bias: 0.5, // default color bias\n        invert: false, // default colormap invert\n        exp: 1000, // default exp value for scaling\n        colormap: \"heat\", // default color map\n        overlay: true, // display png/jpeg overlay?\n        scale: \"linear\", // default scale algorithm\n        scaleclipping: \"dataminmax\", // \"dataminmax\", \"zscale\", or \"user\" (when scalemin, scalemax is supplied)\n        scalemin: Number.NaN, // default scale min is undefined\n        scalemax: Number.NaN, // default scale max is undefined\n        flip: \"y\", // default flip state\n        rot90: 0, // default 90 deg rotation state\n        rotate: 0, // default rotation state\n        zscalecontrast: 0.25, // default from ds9\n        zscalesamples: 600, // default from ds9\n        zscaleline: 120, // default from ds9\n        wcssys: \"native\", // default WCS sys\n        lcs: \"physical\", // default logical coordinate system\n        valpos: false, // whether to display value/position\n        sigma: \"none\", // gauss blur sigma or none\n        opacity: 1.0, // opacity between 0 and 1\n        alpha: 255, // alpha for image (but use opacity!)\n        nancolor: \"#FF0000\", // 6-digit #hex color for NaN values\n        nocolor: {\n            red: 0,\n            green: 0,\n            blue: 0,\n            alpha: 0\n        }, // static color map no color\n        // xcen: 0,                         // default x center pos to pan to\n        // ycen: 0,                         // default y center pos to pan to\n        zoom: \"toFit\", // default zoom factor\n        zooms: 6, // how many zooms in each direction?\n        topZooms: 2, // how many zooms are at top level?\n        wcsalign: true, // align image using wcs after reproj?\n        rotationMode: \"relative\", // default: relative or absolute?\n        crosshair: true, // enable crosshair?\n        disable: [], // list of disabled core services\n        ltvbug: false, // add 0.5/ltm to image LTV values?\n        listonchange: false, // whether to list after a reg change\n        whichonchange: \"selected\" // which to list (\"all\" or \"selected\")\n    };\n\n    let fns = [loadFitsImages, fixJS9ExtraStyles, collapseJS9Extras, scrollToTop];\n\n    // chain function will call the supplied function\n    // and recursively call the chain function with the\n    // the next element in the array\n    function chain(fn) {\n        if (fn) {\n            fn(() => chain(fns.shift()));\n        }\n    }\n    chain(fns.shift());\n\n    // This prevents the page from scrolling down to where it was previously.\n    if ('scrollRestoration' in history) {\n        history.scrollRestoration = 'manual';\n    }\n    // This is needed if the user scrolls down during page load and you want to make sure the page is scrolled to the top once it's fully loaded. This has Cross-browser support.\n    window.scrollTo(0, 0);\n\n});\n\nfunction fixJS9ExtraStyles(next) {\n    // MAKE SQUARE\n    let fitsImgs = document.querySelectorAll(\".JS9\");\n    fitsImgs.forEach(function(fits) {\n        var checkExist = setInterval(function() {\n            if ($(`#${fits.id}`).length) {\n                clearInterval(checkExist);\n                var im = JS9.LookupDisplay(fits.id);\n                JS9.ResizeDisplay(fits.id, im.width, im.width);\n            }\n        }, 100); // check every 100ms\n\n    });\n    // MAKE SQUARE\n    var checkExist2 = setInterval(function() {\n        if (document.querySelectorAll(\".JS9Magnifier\").length) {\n            clearInterval(checkExist2);\n            let plugins = document.querySelectorAll(\".JS9Magnifier\");\n\n            plugins.forEach(function(plugin) {\n                plugin.style.height = plugin.offsetWidth + 'px';\n            });\n        }\n    }, 100); // check every 100ms\n    setTimeout(() => {\n        next()\n    }, 2000);\n    // MAKE SQUARE\n    var checkExist = setInterval(function() {\n        if (document.querySelectorAll(\".ImExamRadialProj\").length) {\n            clearInterval(checkExist);\n            let plugins = document.querySelectorAll(\".ImExamRadialProj\");\n\n            plugins.forEach(function(plugin) {\n                plugin.style.height = plugin.offsetWidth + 'px';\n            });\n        }\n    }, 100); // check every 100ms\n    setTimeout(() => {\n        next()\n    }, 2000);\n\n    // MAKE SQUARE\n    var checkExist3 = setInterval(function() {\n        if (document.querySelectorAll(\".ImExam3dPlot\").length) {\n            clearInterval(checkExist3);\n            let plugins = document.querySelectorAll(\".ImExam3dPlot\");\n\n            plugins.forEach(function(plugin) {\n                plugin.style.height = plugin.offsetWidth + 'px';\n            });\n        }\n    }, 100); // check every 100ms\n    setTimeout(() => {\n        next()\n    }, 2000);\n\n}\n\nfunction loadFitsImages(next) {\n    let allFits = document.querySelectorAll(\".fitsStamp\");\n    allFits.forEach(function(fits) {\n        let fitsScr = fits.getAttribute(\"src\");\n        const newItem = document.createElement('span');\n        let uuid = uuidv4();\n        newItem.innerHTML = `<div class=\"JS9\" data-width=\"100%\" id=\"${uuid}\" ></div>`;\n        if (fits.classList.contains(\"fits-lite\")) {\n            // DO NOTHING\n        } else if (fits.classList.contains(\"fits-toggle\")) {\n            newItem.innerHTML = `<div class=\"JS9Menubar d-none\" id=\"${uuid}Menubar\" data-width=\"100%\"></div>` + newItem.innerHTML\n        } else {\n            newItem.innerHTML = `<div class=\"JS9Menubar\" id=\"${uuid}Menubar\" data-width=\"100%\"></div>` + newItem.innerHTML\n        }\n\n        fits.parentNode.replaceChild(newItem, fits);\n\n        JS9.Preload(fitsScr, {\n            scale: 'linear',\n            zoom: 'toFit',\n            flip: 'y',\n            onload: setDefaultParams\n        }, {\n            display: uuid\n        });\n    });\n    next();\n};\n\nfunction collapseJS9Extras(next) {\n\n    var myCollapse = document.getElementById('collapseJS9Extras');\n    if (typeof myCollapse !== 'undefined' && myCollapse !== null) {\n        myCollapse.classList.add(\"collapse\");\n\n    }\n    next();\n};\n\nfunction setDefaultParams(display) {\n\n    JS9.SetZoom('ToFit', {\n        display: display\n    });\n    JS9.SetColormap('grey', {\n        display: display\n    });\n    JS9.SetScale('dataminmax', {\n        display: display\n    });\n    JS9.AddRegions(\"circle\", {\n        radius: 10\n    }, {\n        display: display\n    });\n    // JS9.SetOpacity(opacity, floorvalue, flooropacity);\n    // JS9.SetFlip(flip);\n    // JS9.SetRotate(rot);\n    // JS9.SetParam(param, value);\n\n}\n\nfunction uuidv4() {\n    return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>\n        (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n    );\n}\n\nfunction toggleJS9Menus() {\n    event.preventDefault();\n    let menus = document.getElementsByClassName('JS9Menubar');\n    for (var i = 0; i < menus.length; i++) {\n        menus[i].classList.toggle('d-none');\n    }\n}\n\nfunction JS9Popout(file, opts) {\n    var dobj = JS9.LookupDisplay(\"Stamp\", false);\n    loadtype = \"light\";\n    var id, did, head, body, html, doc;\n    var myopts = opts || {};\n    myopts.onload = setDefaultParams;\n    myopts.id = \"Stamp\";\n    myopts.flip = \"y\";\n    if (dobj == null) {\n\n        lastid = JS9.LoadWindow(file, myopts, \"light\");\n    } else {\n        JS9.RefreshImage(file, myopts, {\n            display: dobj\n        })\n    }\n\n}\n\nfunction scrollToTop(next) {\n    // This prevents the page from scrolling down to where it was previously.\n    if ('scrollRestoration' in history) {\n        history.scrollRestoration = 'manual';\n    }\n    // This is needed if the user scrolls down during page load and you want to make sure the page is scrolled to the top once it's fully loaded. This has Cross-browser support.\n    window.scrollTo(0, 0);\n    next();\n\n};\n","var NROIS = 0; // number of ROIS -- sufficient for code but not for html\nvar fits;\nvar fits_url;\n// handy\nfunction gebi(id) {\n    return document.getElementById(id);\n}\n\nfunction start_fitsview(_fits, _fits_url) {\n    fits = _fits;\n    fits_url = _fits_url;\n    console.log(fits_url);\n\n    // set initial stretch\n    var stretch_sel = gebi(\"stretch_sel\");\n    if (stretch_sel) {\n        console.log(stretch_sel.value);\n        fits.setStretch(stretch_sel.value);\n    } else {\n        console.log('no stretch div');\n        fits.setStretch(\"linear\");\n    }\n\n    // add handler to report new ROI\n    fits.addROIChangedHandler(onROIChange);\n\n    // connect clean up function\n    window.onunload = function() {\n        if (fits.header_win)\n            fits.header_win.close();\n    };\n\n    // suck up the pixels RDW\n    fits.imageFromUrl(fits_url);\n\n}\n// called to display header\nfunction showHeader() {\n    fits.showHeader(true);\n}\n\n// called when a contrast slider is moved\nfunction newContrast(event) {\n    // collect both values\n    var name = event.target.id;\n    var number = event.target.id.substring(name.length - 1, name.length);\n    var contrast_value = gebi('contrast_slider_' + number).value;\n\n    // update tracking number\n    var contrast_value_id = gebi(\"contrast_value_\" + number);\n    contrast_value_id.innerHTML = contrast_value;\n\n    // update image\n    fits.setContrast(fits.rois[number], contrast_value / 100.0);\n}\n\n// called when the user makes a stretch selection\nfunction onStretchSel() {\n    fits.setStretch(gebi(\"stretch_sel\").value);\n}\n\n// called when an ROI changes, roi is in image coords.\nfunction onROIChange(roi, redef, moved) {\n    var eid = gebi('roiinfo_' + roi.z);\n    var title = roi.z == 0 ? \"Image\" : \"ROI \" + roi.z;\n    if (eid) {\n        displayStats(eid, \"black\", title, roi);\n    }\n    var dh = gebi(\"roihcanvas_\" + roi.z);\n    if (dh) {\n        fits.displayHistogram(roi, dh);\n    }\n}\n\n// called when user turns an ROI on or off\nfunction onDisplayROI(roi_n) {\n    var cb = gebi(\"display_roi_\" + roi_n);\n    fits.enableROI(roi_n, cb.checked);\n}\n\n// display roi and stats in an orderly manner in given DOM id in given color.\nfunction displayStats(id, color, title, roi) {\n    var stats = roi.stats;\n    var fits_coords = fits.image2FITS(roi);\n    var minat_coords = fits.image2FITS(roi.stats.minat);\n    var maxat_coords = fits.image2FITS(roi.stats.maxat);\n    id.innerHTML =\n        title + \": \" + pad(roi.width, 4) + \" x \" + pad(roi.height, 5) +\n        \" @ [\" + pad(fits_coords.x, 5) + \", \" +\n        pad(fits_coords.y, 5) + \"]<br>\" +\n        \"Min \" + pad(stats.min.toFixed(1), 11) + pad(\"\", 4) +\n        \" @ [\" + pad(minat_coords.x.toFixed(0), 5) + \", \" +\n        pad(minat_coords.y.toFixed(0), 5) + \"]<br>\" +\n        \"Max \" + pad(stats.max.toFixed(1), 11) + pad(\"\", 4) +\n        \" @ [\" + pad(maxat_coords.x.toFixed(0), 5) + \", \" +\n        pad(maxat_coords.y.toFixed(0), 5) + \"]<br>\" +\n        \"Mean \" + pad(stats.mean.toFixed(1), 10) + pad(\"\", 2) +\n        \"StdDev \" + pad(stats.stddev.toFixed(1), 12) + \"<br>\" +\n        \"Median \" + pad(stats.median.toFixed(1), 8) + pad(\"\", 1) +\n        \" Sum \" + pad(stats.sum.toFixed(1), 15);\n    id.style.color = color;\n}\n\n// return s padded on left to n chars\nfunction pad(s, n) {\n    s = s.toString();\n    var nadd = n - s.length;\n    for (var i = 0; i < nadd; i++)\n        s = \"&nbsp;\" + s;\n    return (s);\n}\n","/* FITS \"class\".\n *\n * Version 2016-11-14\n *\n * This is a class to display a FITS files in a web page. The FITS file is loaded from an\n * ArrayBuffer, which can easily be obtained from either local or server based files. Once loaded we\n * can provide resizing, a roaming magnifying glass, a separate magnified window and multiple regions of\n * interest, all optional as desired.\n *\n * We provide no user interface controls, we only draw the image and associated graphics. You must\n * provide a div element in which we create and manage all required canvases as children. You may also \n * specify an optional number of Regions of Interest. If you want to display stats or whatnot, you may\n * also ask us to invoke a callback when the mouse moves or an ROI changes.\n *\n * We create one canvas for the image, one for each ROI and one for the mag glass, in increasing z. If you\n * want access to these (can't think why you would) their ids are \"roi_canvasN\", where N runs from 0 through \n * the number of requested ROIs, and \"glass_canvas\". Note roi_canvas0 is really just an immutable ROI the full\n * size of the image. The canvases are in order of increasing z-index, starting at 1 for the image and\n * ending with the glass at the highest z priotity so it is \"on top\".\n *\n * The location and stats for each ROI are in rois[], with rois[0] being the whole image. The stats within\n * each ROI determine only its own contrast except that the stats in the highest priority roi are also used\n * to determine the contrast for rois[0] (the whole image).\n *\n * Resizing was implemented by repurposing scrollbars.\n *\n * If anything goes wrong we throw a brief descriptive string.\n *\n *\n * Required minimal API:\n *\n *   var fits1 = new FITS (div_id, n_rois)\n *\n *     This call will instantiate a new FITS object within the given div id with the given number of ROIs.\n *     At this point the object does not contain an image (see next). Your typical div markup for a FITS\n *     display looks like this:\n *\n *        <div id=\"fits_div\" \n *           style='position:relative; resize:both; overflow:scroll;\n *             height:400px; width:400px; padding-right:17px; padding-bottom:17px' >\n *        </div>\n *\n *        where:\n *          * width and height are just initial since user may resize; they are also the minimums.\n *          * the padding mutes the scrollbars without effecting the mouse coords returned. The value 17\n *            depends on the browser but seems pretty common.\n *\n *     and the corresponding Javascript code would look like this:\n *\n *        var fits1 = new FITS (document.getElementById (\"fits_div\", 2);\n *\n *\n *   fits1.setNewImage (filename, ArrayBuffer)\n *\n *     install a new FITS file into the given FITS object. This may be done as many times as desired, each\n *     call overwriting the previous image.\n *\n *        filename: just a string used for error messages\n *        ArrayBuffer: the actual file contents, likely from a remote AJAX call or a local file selection.\n *\n *\n * Optional API:\n *\n *   fits1.addMouseHandler(myMouseHandler) \n *     connect the given callback function for mouse moves. callback gets FITS loc{x,y} which can call\n *     getPixelAtFITS(loc) to get image coord.\n *\n *   fits1.addROIChangedHandler(myROIChangedHandler)\n *     connect the given callback function for ROI changes. callback gets three arguments:\n *       - roi{x,y,z,width,height,stats} where stats includes at least {min,max,mean,stddev,sum,sum2,npixels}\n *       - redef which is true iff the callback is being triggered because of a call to redefineROI().\n *       - moved which is true iff the callback is being triggered because the ROI was moved or resized.\n *\n *   fits1.addResizeHandler(myResizeListener)\n *     connect the given callback function for FITS display size changes.\n *\n *   fits1.addGlassCanvas(canvas_id)\n *     connect the given canvas into which we draw a magnified area surrounding the cursor location. If\n *     the user clicks the mouse over the image then subsequently moves the cursor outside the image, the\n *     clicked position is displayed.\n *\n *   fits1.setContrast(fits.rois[i], c)\n *     change contrast of image or ROI, where\n *       i: 0 = image, 1..nrois\n *       c: contrast, 0 <= c <= 1\n *\n *   fits1.setStretch (stretch)\n *     set desired stretch function, where stretch is currently one of \"linear\", \"square\" or \"sqrt\"\n *\n *   fits1.enableROI (roi_n, true_or_false)\n *     enable/disable a ROI given its rois[] index, ignored if out of bounds.\n *\n *   fits1.redefineROI (roi_n, roi_defn)\n *     given a ROI index (1 .. n_rois) move and/or resize the given ROI programmatically to the values in\n *     roi_defn which must contain {x,y,width,height}. Triggers addROIChangedHandler, if any, with redef\n *     and moved true. Throws if new definition is now wholy within the current image.\n *\n *   fits1.showHeader(force)\n *     display FITS header in a separate popup window if force, else only if already up\n *\n *   fits1.header.<key>\n *     access an individual header value, for example fits1.header.NAXIS1\n *\n *\n * The first pixel in a FITS file is to be displayed in the lower left corner. Javascript wants the\n * first pixel of an image to be the upper left corner. To accommodate this, FITS.setNewImage() flips\n * the pixel rows when filling the FITS.image array. Thus, displaying the image array with native Javascript\n * methods will display the pixels correctly. Then regarding pixel coordinates, FITS wants the lower left\n * corner to be [1,1] whereas Javascript wants the upper left to be [0,0]. All coordinates used in this\n * package use the Javascript convention. These may be converted to and from FITS using image2FITS() and\n * FITS2Image(). Note that ROIs will be adjusted so that the visual lower left corner will be the x,y\n * reference location in both coordinate systems.\n */\n\n/* FITS view \"class\".\n * create an instance with new for each desired display area, fine to have more than one per page.\n */\nfunction FITS(div_id, n_rois) {\n\n    // check args\n    if (!div_id || div_id.tagName != \"DIV\") // must be a div\n        throw (\"FITS requires a div\");\n    if (isNaN(parseInt(n_rois))) // default to no ROIs\n        n_rois = 0;\n\n    // add a resize listener (see code at end)\n    var thisfits = this;\n    createResizeListener();\n    addResizeListener(div_id, function() {\n        thisfits.handleResize();\n    });\n\n    // build each ROI, including first one for the image\n    this.rois = new Array(n_rois + 1);\n    // TODO: test for too few colors\n    var roicolors = [\"#bbb\", \"#55f\", \"#393\", \"orange\", \"#1ff\", \"#f1f\", \"#fa1\", \"white\"];\n    for (var i = 0; i <= n_rois; i++) {\n        var roi = {};\n        roi.x = 0; // ul roi x, image coords\n        roi.y = 0; // ul roi y, image coords\n        roi.z = i; // canvas z depth\n        roi.enabled = true; // whether to display\n        roi.width = 10000000; // roi width (start huge to force resize)\n        roi.height = 10000000; // roi height (start huge to force resize)\n        roi.contrast = 0; // display contrast, 0 .. 1\n        roi.color = roicolors[i]; // border color\n        roi.stats = {}; // see computeROIStats()\n        roi.black = undefined; // black pixel, once contrast is defined\n        roi.white = undefined; // white pixel, once contrast is defined\n        roi.cvs = FITS_newCanvas(div_id, \"roi_canvas\" + i, i + 1); // new canvas\n        roi.ctx = roi.cvs.getContext(\"2d\"); // handy canvas 2d context \n        this.rois[i] = roi; // add to array of all ROIs\n    }\n\n    // build the glass layer on top\n    this.gcvs = FITS_newCanvas(div_id, \"glass_canvas\", n_rois + 2); // glass canvas\n    this.gctx = this.gcvs.getContext(\"2d\"); // handy glass 2d context\n\n    // connect our mouse and keyboard handlers\n    window.addEventListener(\"mousemove\", function(event) {\n        FITS_handleMouse(event, thisfits);\n    }, true);\n    window.addEventListener(\"mousedown\", function(event) {\n        FITS_handleMouse(event, thisfits);\n    }, true);\n    window.addEventListener(\"keydown\", function(event) {\n        FITS_handleKeyboard(event, thisfits);\n    }, true);\n    window.addEventListener(\"keyup\", function(event) {\n        FITS_handleKeyboard(event, thisfits);\n    }, true);\n\n    // use highest priority roi for entire image contrast\n    this.icroi = n_rois;\n\n    // init instance variables, most are undefined until an image is set\n    this.div_id = div_id; // canvases container\n    this.image = undefined; // image, flipped in Y and phys values\n    this.filename = undefined; // original FITS file name\n    this.header = {}; // FITS header index by keyword\n    this.rawheader = []; // array of literal header cards\n    this.drew_glass = false; // whether glass is currently visible\n    this.glass_size = 0.05; // glass image fraction (before mag)\n    this.glass_mag = 4; // default glass mag factor\n    this.glass_mic = undefined; // center glass click location\n    this.mic = undefined; // current mouse image coordinates\n    this.width = undefined; // handy image size\n    this.height = undefined; // handy image size\n    this.resize_scale = undefined; // display size / image size\n    this.header_win = undefined; // separate window for header\n    this.stretch = \"linear\"; // default stretch\n\n    // place to record user's callbacks\n    this.userMouseHandler = undefined; // user's mouse event callback\n    this.userROIChangedHandler = undefined; // user's ROI changed callback\n    this.userGlassCanvas = undefined; // user's canvas for drawing glass\n\n    // ROI dragging state\n    this.drag_roi = undefined; // rois[] index currently being dragged\n    this.drag_code = undefined; // which edge, corner or all being dragged\n    this.drag_mvos = {\n        dx: 0,\n        dy: 0\n    }; // clicked move offset from roi center \n    this.cursors = { // map of drag_codes to javacript cursors\n        \"n-resize\": \"ns-resize\",\n        \"s-resize\": \"ns-resize\",\n        \"e-resize\": \"ew-resize\",\n        \"w-resize\": \"ew-resize\",\n        \"ne-resize\": \"nesw-resize\",\n        \"sw-resize\": \"nesw-resize\",\n        \"nw-resize\": \"nwse-resize\",\n        \"se-resize\": \"nwse-resize\",\n        \"move\": \"move\"\n    };\n}\n\n/* get fits from a url, by RDW */\nFITS.prototype.imageFromUrl = function(fits_url) {\n    var xhr = new XMLHttpRequest();\n    xhr.onload = function(e) {\n        var result = xhr.response;\n        if (xhr.status == 200) {\n            fits.setNewImage('fits_file', result);\n            fits.showHeader(false);\n        }\n    };\n\n    xhr.open('GET', fits_url);\n    xhr.responseType = 'arraybuffer';\n    xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\n    xhr.send(null);\n};\n\n/* return a new canvas with z-index z with initial size same as parent.\n */\nfunction FITS_newCanvas(parent, name, z) {\n    var cid = document.createElement(\"canvas\");\n    cid.setAttribute(\"id\", name);\n\n    cid.setAttribute(\"style\", \"position:absolute; z-index:\" + z);\n    cid.setAttribute(\"width\", parseInt(parent.style.width));\n    cid.setAttribute(\"height\", parseInt(parent.style.height));\n    parent.appendChild(cid);\n\n    return (cid);\n}\n\n/* capture the new FITS file from the given ArrayBuffer with the given name into roi[0].\n */\nFITS.prototype.setNewImage = function(filename, fitsab) {\n    // save file name\n    this.filename = filename;\n\n    // init header collections\n    this.header = {};\n    this.rawheader = [];\n\n    // fill header from 80 byte cards blocked in units of 2880 bytes.\n    var hlen = 0;\n\n    try {\n        for (hlen = 0; hlen < fitsab.byteLength; hlen += 80) {\n\n            var card = String.fromCharCode.apply(null, new Uint8Array(fitsab, hlen, 80));\n            if (card.match(/^END */)) { // finished when see END\n                hlen += 80;\n                break;\n            }\n\n            this.rawheader.push(card); // capture the raw card image\n\n            if (card.indexOf(\"=\") < 0) // skip COMMENT, HISTORY etc\n                continue;\n\n            var key = card.substring(0, 8); // key is always the first 8 chars ...\n            key = key.replace(/ *$/, \"\"); // without trailing blanks\n\n            var val = card.substring(10); // value starts in col 11 but ...\n            val = val.replace(/^ */, \"\"); // remove leading blanks\n            val = val.replace(/\\/.*$/, \"\"); // remove comments\n            val = val.replace(/ *$/, \"\"); // remove trailing blanks\n            if (val.indexOf(\"'\") >= 0) // looks like a string\n                val = val.substring(1, val.length - 2);\n            else if (val.indexOf(\"T\") >= 0) // looks like a True boolean\n                val = true;\n            else if (val.indexOf(\"F\") >= 0) // looks like a False boolean\n                val = false;\n            else if (val.indexOf(\".\") >= 0) // looks like a float\n                val = parseFloat(val);\n            else // must be an int\n                val = parseInt(val);\n            this.header[key] = val;\n            // console.log (key + \": #\" + this.header[key] + \"#\");\n        }\n    } catch (e) {\n        throw (this.filename + \": not a FITS file: \" + e);\n    }\n\n    // confirm minimal header\n    if (!(this.header.SIMPLE &&\n            typeof this.header.NAXIS1 == \"number\" &&\n            typeof this.header.NAXIS2 == \"number\" &&\n            typeof this.header.BITPIX == \"number\")) {\n        throw (this.filename + \": not a valid FITS file\");\n    }\n\n    // pixels start on next whole 2880 block\n    if ((hlen % 2880) > 0)\n        hlen += 2880 - (hlen % 2880);\n\n    // save image size\n    // console.log (this.header.NAXIS1 + \" x \" + this.header.NAXIS2 + \" x \" + this.header.BITPIX);\n    this.width = this.rois[0].width = this.header.NAXIS1;\n    this.height = this.rois[0].height = this.header.NAXIS2;\n    var npixels = this.width * this.height;\n    var nbytes = npixels * Math.abs(this.header.BITPIX) / 8;\n    if (fitsab.byteLength < hlen + nbytes)\n        throw (this.filename + \": too short: \" + fitsab.byteLength + \" < \" + (hlen + nbytes));\n    // console.log (npixels + \" pixels in \" + nbytes + \" bytes\");\n\n    // convert remainder of file to an array of physical values, depending on type.\n    // along the way also flip vertically.\n    var bzero = this.header.BZERO || 0;\n    var bscale = this.header.BSCALE || 1;\n    this.image = new Array(npixels);\n    var dv = new DataView(fitsab, hlen, nbytes);\n    if (this.header.BITPIX == 8) {\n        // data is array of unsigned bytes\n        var imgi = 0;\n        for (var y = 0; y < this.height; y++) {\n            var fitsi = (this.height - 1 - y) * this.width;\n            for (var x = 0; x < this.width; x++) {\n                this.image[imgi] = bzero + bscale * dv.getUint8(fitsi);\n                imgi++;\n                fitsi++;\n            }\n        }\n    } else if (this.header.BITPIX == 16) {\n        // data is array of signed words, big endian\n        var imgi = 0;\n        for (var y = 0; y < this.height; y++) {\n            var fitsi = (this.height - 1 - y) * this.width;\n            for (var x = 0; x < this.width; x++) {\n                this.image[imgi] = bzero + bscale * dv.getInt16(fitsi * 2, false);\n                imgi++;\n                fitsi++;\n            }\n        }\n    } else if (this.header.BITPIX == 32) {\n        // data are array of signed double words, big endian\n        var imgi = 0;\n        for (var y = 0; y < this.height; y++) {\n            var fitsi = (this.height - 1 - y) * this.width;\n            for (var x = 0; x < this.width; x++) {\n                this.image[imgi] = bzero + bscale * dv.getInt32(fitsi * 4, false);\n                imgi++;\n                fitsi++;\n            }\n        }\n    } else if (this.header.BITPIX == -32) {\n        // data are array of IEEE single precising floating point, big endian\n        var imgi = 0;\n        for (var y = 0; y < this.height; y++) {\n            var fitsi = (this.height - 1 - y) * this.width;\n            for (var x = 0; x < this.width; x++) {\n                this.image[imgi] = bzero + bscale * dv.getFloat32(fitsi * 4, false);\n                imgi++;\n                fitsi++;\n            }\n        }\n    } else {\n        throw (this.filename + \": BITPIX \" + this.header.BITPIX + \" is not yet supported\");\n    }\n\n    // display by faking a resize event which does everything\n    this.handleResize();\n}\n\n/* called to display the FITS header in its own window.\n * if force is true, we create a new window; if false, we only update the header window if it already\n * exists and is still open.\n */\nFITS.prototype.showHeader = function(force) {\n    // check null cases\n    if (!this.filename || !this.rawheader)\n        return; // no image yet\n    var isup = this.header_win && !this.header_win.closed;\n    if (!isup && !force)\n        return; // not up but don't care\n\n    // create window if it does not exist or last one was closed\n    if (this.header_win == undefined || this.header_win.closed) {\n        this.header_win = window.open(\"\", \"_blank\", \"width=500, height=500, scrollbars=yes\");\n        // build outer html element in document, then updates go inside this\n        this.header_win.document.write(\"<html></html>\");\n    }\n\n    // build text that will go inside html element\n    var text = \"<head><title>\" + this.filename + \" Header</title></head><body><pre>\";\n    for (var i = 0; i < this.rawheader.length; i++)\n        text += this.rawheader[i] + \"<br>\";\n    text += \"</pre></body>\";\n\n    // display\n    this.header_win.document.documentElement.innerHTML = text;\n}\n\n/* compute some image stats at the given ROI.\n * ROI must have x, y, width and height.\n * object returned will have at least properties npixels, min, max, sum, mean, stddev and histo.\n * throw if ROI is not wholly contained with in the image.\n */\nFITS.prototype.computeROIStats = function(roi) {\n    if (!this.image)\n        return;\n\n    // console.log (roi.x + \" \" + roi.y + \" \" + roi.width + \" \" + roi.height);\n    if (roi.x < 0 || roi.width < 0 || roi.x + roi.width > this.width ||\n        roi.y < 0 || roi.height < 0 || roi.y + roi.height > this.height)\n        throw (this.filename + \": roi is outside image [\" + roi.x + \",\" + roi.y + \"], \" +\n            roi.width + \" x \" + roi.height);\n\n    // scan pixels within roi\n    var npixels = roi.width * roi.height;\n    var pxi = roi.y * this.width + roi.x; // start of first row in roi\n    var min = this.image[pxi];\n    var max = min;\n    var maxatx = roi.x,\n        maxaty = roi.y;\n    var minatx = roi.x,\n        minaty = roi.y;\n    var sum = 0;\n    var sum2 = 0;\n    for (var dy = 0; dy < roi.height; dy++) {\n        for (var dx = 0; dx < roi.width; dx++) {\n            var p = this.image[pxi++];\n            if (p < min) {\n                min = p;\n                minatx = dx + roi.x;\n                minaty = dy + roi.y;\n            }\n            if (p > max) {\n                max = p;\n                maxatx = dx + roi.x;\n                maxaty = dy + roi.y;\n            }\n            sum += p;\n            sum2 += p * p;\n        }\n        pxi += (this.width - roi.width); // skip to start of next row\n    }\n    var range = Math.max(1, max - min);\n    var stddev = Math.sqrt(npixels * sum2 - sum * sum) / npixels;\n\n    // init histogram, index N bins as [0..N-1] for pixel values [min..max].\n    // nothing critical about N.\n    var histo = new Array(128);\n    for (var i = 0; i < histo.length; i++)\n        histo[i] = 0;\n\n    // use pixel range to rescan for histogram\n    pxi = roi.y * this.width + roi.x; // start of first row in roi\n    var histomax = 0; // n counts in largest bin\n    for (var dy = 0; dy < roi.height; dy++) {\n        for (var dx = 0; dx < roi.width; dx++) {\n            var p = this.image[pxi++];\n            var bin = Math.floor((histo.length - 1) * (p - min) / range);\n            if (++histo[bin] > histomax)\n                histomax = histo[bin];\n        }\n        pxi += (this.width - roi.width); // skip to start of next row\n    }\n\n    // find median: pixel at which half are below and half above\n    var histi = 0;\n    for (var count = 0; count < npixels / 2; histi++)\n        count += histo[histi];\n    var median = Math.floor(min + range * histi / histo.length);\n    // console.log ('median = ' + median);\n\n    // return the stats report\n    return {\n        npixels: npixels, // n pixels in this roi\n        min: min, // smallest pixel in this roi\n        minat: {\n            x: minatx, // location of smallest pixel\n            y: minaty\n        },\n        max: max, // largest pixel in this roi\n        maxat: {\n            x: maxatx, // location of largest pixel\n            y: maxaty\n        },\n        range: range, // large of 1 and (max - min)\n        sum: sum, // sum of all pixels in this roi\n        mean: sum / npixels, // average of all pixels in this roi\n        median: median, // median of all pixels in this roi\n        stddev: stddev, // stddev of all pixels in this roi\n        histo: histo, // histogram, count of min .. max in length bins\n        histomax: histomax, // greatest count in histo, used for scaling\n    };\n}\n\n/* set contrast from 0 .. 1 on the given roi then redraw.\n */\nFITS.prototype.setContrast = function(roi, contrast) {\n    if (!this.image)\n        return;\n    if (contrast < 0 || contrast > 1)\n        throw (\"setContrast \" + contrast + \" must be 0 .. 1\");\n    roi.contrast = Math.sqrt(contrast); // more control near high contrast\n    this.renderROI(roi, false, false);\n}\n\n/* return black white pixel values given contrast and stats.\n */\nFITS.prototype.findBlackAndWhite = function(contrast, stats) {\n    if (!stats)\n        return;\n\n    // handy\n    var histo = stats.histo;\n    var black, white;\n\n    // pick one\n    if (true) {\n\n        // stddev method\n\n        black = Math.max(stats.min, stats.mean - 6 * stats.stddev * (1 - contrast));\n        white = Math.min(stats.max, stats.mean + 6 * stats.stddev * (1 - contrast));\n\n    } else if (false) {\n\n        // median spread method sans outer 1%\n\n        var NFRACP = stats.npixels / 50;\n        var nhisto = histo.length - 1;\n        var blacki = 0,\n            whitei = nhisto;\n        for (var sum = 0; blacki < nhisto && sum < NFRACP; blacki++)\n            sum += histo[blacki];\n        for (var sum = 0; whitei >= 0 && sum < NFRACP; --whitei)\n            sum += histo[whitei];\n\n        var minpix = stats.min + blacki * stats.range / nhisto;\n        var maxpix = stats.min + whitei * stats.range / nhisto;\n\n        black = stats.median - (stats.median - minpix) * (1 - contrast);\n        white = stats.median + (maxpix - stats.median) * (1 - contrast);\n\n    } else if (false) {\n\n        // spread equal fraction about the median to each end\n\n        black = stats.median - (stats.median - stats.min) * (1 - contrast);\n        white = stats.median + (stats.max - stats.median) * (1 - contrast);\n\n        // console.log(stats.min + ' .. ' + stats.median + ' .. ' + stats.max + ' : ' + black + ' .. ' + white);\n\n    } else if (false) {\n\n        // spread equally about the median by smaller of distance to each end\n\n        var spread = Math.min(stats.max - stats.median, stats.median - stats.min);\n        black = stats.median - spread * (1 - contrast);\n        white = stats.median + spread * (1 - contrast);\n\n    } else {\n\n        // contrast is based on displaying some fraction of total pixels about the median\n\n        var median_i = Math.floor(histo.length * (stats.median - stats.min) / stats.range);\n        var contrast_count = stats.npixels * (1 - contrast);\n\n        var black_i = Math.max(median_i - 1, 0);\n        var white_i = Math.min(median_i + 1, histo.length - 1);\n        for (var count = histo[median_i]; count < contrast_count;) {\n            count += histo[black_i];\n            count += histo[white_i];\n            black_i = Math.max(black_i - 1, 0);\n            white_i = Math.min(white_i + 1, histo.length - 1);\n        }\n\n        black = stats.min + stats.range * black_i / histo.length;\n        white = stats.min + stats.range * white_i / histo.length;\n    }\n\n    // insure constant has some depth\n    // if (black >= white)\n    // black = white - 1;\n\n    return {\n        black: black,\n        white: white\n    };\n\n}\n\n// called when user resizes the div containing the canvases\nFITS.prototype.handleResize = function() {\n    if (!this.image)\n        return;\n\n    // get current physical size of div, accommodate possible units suffix\n    var divw = parseInt(this.div_id.style.width);\n    var divh = parseInt(this.div_id.style.height);\n\n    // resize each canvas to match the div, glass too\n    for (var i = 0; i < this.rois.length; i++) {\n        this.rois[i].cvs.setAttribute(\"width\", divw);\n        this.rois[i].cvs.setAttribute(\"height\", divh);\n    }\n    this.gcvs.setAttribute(\"width\", divw);\n    this.gcvs.setAttribute(\"height\", divh);\n\n    // establish size of canvas compared to size of image, maintaining aspect ratio\n    if (divw / divh > this.width / this.height) {\n        // full height\n        this.resize_scale = divh / this.height;\n    } else {\n        // full width\n        this.resize_scale = divw / this.width;\n    }\n\n    // set each roi scale so we can always work in image coords, glass too\n    for (var i = 0; i < this.rois.length; i++) {\n        this.rois[i].ctx.setTransform(1, 0, 0, 1, 0, 0);\n        this.rois[i].ctx.translate(0.5, 0.5); // crisper lines and pixels\n        this.rois[i].ctx.scale(this.resize_scale, this.resize_scale);\n    }\n    this.gctx.setTransform(1, 0, 0, 1, 0, 0);\n    this.gctx.translate(0.5, 0.5); // crisper lines and pixels\n    this.gctx.scale(this.resize_scale, this.resize_scale);\n\n    // now render everything at this size\n    this.renderAll();\n}\n\n// (re)render everything, be prepared to adjust ROIs and glass sizes\nFITS.prototype.renderAll = function() {\n    // update all ROIS first so rois[0] can use stats in rois[icroi] for contrast\n    var nrois = this.rois.length;\n    var moved = false;\n    for (var i = 0; i < nrois; i++) {\n        var roi = this.rois[i];\n\n        // adjust ROI back to a default location inside if it is now outside the image size\n        if (roi.x + roi.width > this.width || roi.y + roi.height > this.height ||\n            (roi.width * this.resize_scale < 20 && roi.height * this.resize_scale < 20)) {\n            roi.x = Math.floor(3 * ((nrois - i) % nrois) * this.width / 20); // left->right decreasing z\n            roi.y = Math.floor(this.height / 20);\n            roi.width = Math.floor(this.width / 10);\n            roi.height = Math.floor(this.height / 10);\n            moved = true;\n        }\n    }\n\n    // now render all rois\n    for (var i = 0; i < this.rois.length; i++)\n        this.renderROI(this.rois[i], false, moved);\n}\n\n// allow user to set desired stretch function\nFITS.prototype.setStretch = function(s) {\n    this.stretch = s;\n    this.renderAll();\n}\n\n// allow user to enable/disable a given roi\nFITS.prototype.enableROI = function(roi_n, enable) {\n    if (roi_n < 1 || roi_n >= this.rois.length)\n        throw ('enableROI(' + roi_n + ') must be 1 .. ' + (this.rois.length - 1));\n\n    var roi = this.rois[roi_n];\n    roi.enabled = enable;\n    this.renderROI(roi, false, false);\n}\n\n/* redefine the given ROI.\n * throw if not wholy within the current image.\n */\nFITS.prototype.redefineROI = function(roi_n, roi_defn) {\n    // validate roi_n\n    if (roi_n < 1 || roi_n >= this.rois.length)\n        throw ('redefineROI(' + roi_n + ') must be 1 .. ' + (this.rois.length - 1));\n\n    // validate roi_defn\n    if (roi_defn.x < 0 || roi_defn.x + roi_defn.width > this.width ||\n        roi_defn.y < 0 || roi_defn.y + roi_defn.height > this.height)\n        throw ('redefineROI [' + roi_defn.x + ',' + roi_defn.y + ';' + roi_defn.width + 'x' + roi_defn.height +\n            '] not inside image [' + this.width + 'x' + this.height + ']');\n\n    var roi = this.rois[roi_n];\n\n    // install new definition\n    roi.x = roi_defn.x;\n    roi.y = roi_defn.y;\n    roi.width = roi_defn.width;\n    roi.height = roi_defn.height;\n\n    // console.log ('redefineROI to ['+ roi.x + ',' + roi.y + ';' + roi.width + 'x' + roi.height + ']');\n\n    // redraw and indicate this is a move\n    this.renderROI(roi, true, true);\n\n    // also redisplay image if we moved rois[this.icroi]\n    if (this.rois.length > 1 && roi == this.rois[this.icroi])\n        this.renderROI(this.rois[0], false, false);\n}\n\n/* render the given ROI and invoke userROIChangedHandler, if any, with redef\n */\nFITS.prototype.renderROI = function(roi, redef, moved) {\n    // harmless if no image yet\n    if (!this.image)\n        return;\n\n    // compute our stats\n    roi.stats = this.computeROIStats(roi);\n\n    // find black and white.\n    var bw = this.findBlackAndWhite(roi.contrast, roi.stats);\n    var black = roi.black = bw.black;\n    var white = roi.white = bw.white;\n\n    // N.B.: whole image in rois[0] uses stats from rois[icroi]\n    if (roi == this.rois[0] && this.rois.length > 1 && this.rois[this.icroi].enabled) {\n        var icroi_stats = this.computeROIStats(this.rois[this.icroi]);\n        var bw = this.findBlackAndWhite(roi.contrast, icroi_stats);\n        black = bw.black;\n        white = bw.white;\n    }\n\n    // handy\n    var ctx = roi.ctx;\n    var range = Math.max(1, white - black);\n\n    // set up stretch option\n    var stretch_f;\n    if (this.stretch == \"linear\") {\n        stretch_f = function(pixel) {\n            return (255 * (pixel - black) / range);\n        }\n    } else if (this.stretch == \"square\") {\n        stretch_f = function(pixel) {\n            var v = (pixel - black) / range;\n            return (255 * v * v);\n        }\n    } else if (this.stretch == \"sqrt\") {\n        stretch_f = function(pixel) {\n            return (255 * Math.sqrt((pixel - black) / range));\n        }\n    } else {\n        throw (\"Unknown stetch: \" + this.stretch + \", choices are linear, square and sqrt\");\n    }\n\n    // render as gray scale from black to white, or all transparent if disabled\n    if (roi.enabled) {\n        var roiimage = new ImageData(roi.width, roi.height);\n        var roidata = roiimage.data; // detach from DOM for potentially faster access?\n        var datai = 0; // RGBA tuple index\n        //    for (var y = roi.y; y < roi.y + roi.height; y++) {\n        for (var y = roi.y + roi.height - 1; y >= roi.y; y--) {\n            for (var x = roi.x; x < roi.x + roi.width; x++) {\n                var p = this.image[y * this.width + x];\n                var gray = stretch_f(p);\n                roidata[4 * datai] = gray; // red\n                roidata[4 * datai + 1] = gray; // green\n                roidata[4 * datai + 2] = gray; // blue\n                roidata[4 * datai + 3] = 255; // alpha\n                datai++;\n            }\n        }\n        // roiimage.data = roidata; // reattach\n\n        // display it, must go through a temp canvas in order to use drawImage\n        var tempcan = document.createElement(\"canvas\");\n        tempcan.width = roi.width;\n        tempcan.height = roi.height;\n        var tcctx = tempcan.getContext(\"2d\");\n        tcctx.putImageData(roiimage, 0, 0);\n        this.clearLayer(ctx);\n        noSmoothing(ctx);\n        ctx.drawImage(tempcan, roi.x, roi.y); // resizes according to ctx\n\n        // garbage collector will clean up tempcvs because it has no parent but give it a kick anyway\n        tempcan = undefined;\n\n        // add outline\n        ctx.strokeStyle = roi.color;\n        ctx.lineWidth = 2;\n        ctx.beginPath();\n        ctx.moveTo(roi.x, roi.y);\n        ctx.lineTo(roi.x + roi.width, roi.y);\n        ctx.lineTo(roi.x + roi.width, roi.y + roi.height);\n        ctx.lineTo(roi.x, roi.y + roi.height);\n        ctx.lineTo(roi.x, roi.y);\n        ctx.lineTo(roi.x + roi.width, roi.y); // fill corner if highly magnified\n        ctx.stroke();\n    } else {\n        this.clearLayer(ctx);\n    }\n\n    // inform user if interested\n    if (this.userROIChangedHandler != undefined)\n        this.userROIChangedHandler(roi, redef, moved);\n}\n\n/* given image coords of glass center, draw a magnified portion on the glass canvas\n */\nFITS.prototype.renderGlass = function(image_loc) {\n    // harmless if called without a glass canvas or before image is loaded\n    if (!image_loc || !this.gcvs || !this.image)\n        return;\n\n    // check for edges\n\n    var glassimgsz = this.glass_size * this.width;\n    var glasssz = glassimgsz * this.glass_mag;\n    var ulglassx, ulglassy, glassw, glassh, imw, imh;\n    var x = image_loc.x;\n    var y = image_loc.y;\n\n    if (x < 0 || x >= this.width)\n        return;\n    if (x < glasssz / 2) {\n        ulglassx = 0;\n        glassw = 2 * x;\n        imw = glassw / this.glass_mag;\n    } else if (x > this.width - glasssz / 2) {\n        glassw = 2 * (this.width - x);\n        ulglassx = this.width - glassw;\n        imw = glassw / this.glass_mag;\n    } else {\n        ulglassx = x - glasssz / 2;\n        glassw = glasssz;\n        imw = glassimgsz;\n    }\n\n    if (y < 0 || y >= this.height)\n        return;\n    if (y < glasssz / 2) {\n        ulglassy = 0;\n        glassh = 2 * y;\n        imh = glassh / this.glass_mag;\n    } else if (y > this.height - glasssz / 2) {\n        glassh = 2 * (this.height - y);\n        ulglassy = this.height - glassh;\n        imh = glassh / this.glass_mag;\n    } else {\n        ulglassy = y - glasssz / 2;\n        glassh = glasssz;\n        imh = glassimgsz;\n    }\n\n    // draw glass in canvas from image layer with magnified size\n    noSmoothing(this.gctx);\n    this.gctx.drawImage(this.rois[0].cvs, // source canvas\n        (x - imw / 2) * this.resize_scale + 1, (y - imh / 2) * this.resize_scale + 1, // source x, y\n        imw * this.resize_scale, imh * this.resize_scale, // source w, h\n        ulglassx, ulglassy, // dest (gid_ctx) x, y\n        glassw, glassh); // dest w, h\n\n    // add a nice border\n    this.gctx.strokeStyle = \"yellow\";\n    this.gctx.beginPath();\n    this.gctx.moveTo(ulglassx, ulglassy);\n    this.gctx.lineTo(ulglassx + glassw, ulglassy);\n    this.gctx.lineTo(ulglassx + glassw, ulglassy + glassh);\n    this.gctx.lineTo(ulglassx, ulglassy + glassh);\n    this.gctx.lineTo(ulglassx, ulglassy);\n    this.gctx.stroke();\n}\n\n/* convert image to FITS coords.\n * if the given object contains at least {x, y, height} then return a copy of the object with x and y\n *   converted to FITS coordinates, including arranging for new reference corner to be visually in the\n *   lower left corner, ie, at smallest numeric location.\n * if the given object contains x and y but not height, then return a copy of the object with just x\n *   and y converted to FITS coords without regard to a reference position.\n * N.B. we do no bounds checking\n */\nFITS.prototype.image2FITS = function(imageloc) {\n    // skip if no image yet\n    if (!this.height || !imageloc)\n        return;\n\n    var fitsloc = (JSON.parse(JSON.stringify(imageloc)));\n    fitsloc.x = imageloc.x + 1;\n    fitsloc.y = this.height - imageloc.y;\n    if (imageloc.height)\n        fitsloc.y -= (imageloc.height - 1); // exclusive\n    return (fitsloc);\n}\n\n/* convert FITS to image coords.\n * if the given object contains at least {x, y, height} then return a copy of the object with x and y\n *   converted to image coordinates, including arranging for new reference corner to be visually in the\n *   lower left corner, ie, at smallest numeric location.\n * if the given object contains x and y but not height, then return a copy of the object with just x\n *   and y converted to FITS coords without regard to a reference position.\n * N.B. we do no bounds checking\n */\nFITS.prototype.FITS2Image = function(fitsloc) {\n    // skip if no image yet\n    if (!this.height || !fitsloc)\n        return;\n\n    var imageloc = (JSON.parse(JSON.stringify(fitsloc)));\n    imageloc.x = fitsloc.x - 1;\n    imageloc.y = this.height - fitsloc.y;\n    if (fitsloc.height)\n        imageloc.y -= (fitsloc.height - 1); // exclusive\n    return (imageloc);\n}\n\n/* convert screen coords in a javascript event to image coords\n */\nFITS.prototype.event2image = function(event) {\n    var imgcoords = {};\n\n    // get raw coords, depending on browser\n    if (event.pageX) {\n        imgcoords.x = event.pageX;\n        imgcoords.y = event.pageY;\n    } else {\n        imgcoords.x = event.clientX;\n        imgcoords.y = event.clientY;\n    }\n\n    // account for browser window scrolling (not the div scrolling)\n    var iid_rect = this.rois[0].cvs.getBoundingClientRect();\n    imgcoords.x -= (window.pageXOffset + iid_rect.left);\n    imgcoords.y -= (window.pageYOffset + iid_rect.top);\n\n    // now account for user resizing and drop to nearest whole pixel\n    imgcoords.x = Math.floor(imgcoords.x / this.resize_scale);\n    imgcoords.y = Math.floor(imgcoords.y / this.resize_scale);\n\n    return (imgcoords);\n}\n\n/* function user can call to register a function we call whenever the mouse moves over the image,\n *   or cancel same if undefined.\n * if we do call handler, first argument will be a object containing x and y in FITS coords, second will be\n *   value of pixel at that location.\n */\nFITS.prototype.addMouseHandler = function(handler) {\n    this.userMouseHandler = handler;\n}\n\n/* function user can call to register a function we call whenever an ROI changes location or shape,\n *   or cancel same if undefined.\n * if we do call handler, argument will be an object with ROI details.\n */\nFITS.prototype.addROIChangedHandler = function(handler) {\n    this.userROIChangedHandler = handler;\n}\n\n/* function user can call to register a function we call whenever the FITS canvases are resized\n */\nFITS.prototype.addResizeHandler = function(handler) {\n    addResizeListener(this.div_id, handler);\n}\n\n/* function user can call to register a canvas on which we draw a magnified region centered under \n *   the cursor, or undefined to cancal this feature.\n */\nFITS.prototype.addGlassCanvas = function(canvas_id) {\n    this.userGlassCanvas = canvas_id;\n}\n\n/* given an image location, set this.drag_roi and this.drag_code, if any.\n * don't worry too much about resolving ambiguities if some ROIs overlap.\n */\nFITS.prototype.findROI = function(image_loc) {\n    var stol = 4; // tolerance, in screen pixels\n    var tolerance = stol / this.resize_scale; // tolerance, in image pixels\n\n    this.drag_roi = undefined;\n    this.drag_code = undefined;\n\n    // don't include the basic image in ROI 0\n    for (var i = 1; this.drag_code == undefined && i < this.rois.length; i++) {\n        var roi = this.rois[i];\n\n        var near = roi.enabled &&\n            image_loc.x > roi.x - tolerance && image_loc.x < roi.x + roi.width + tolerance &&\n            image_loc.y > roi.y - tolerance && image_loc.y < roi.y + roi.height + tolerance\n\n        if (near) {\n\n            var on_top_edge = image_loc.y < roi.y + tolerance;\n\n            var want_move = on_top_edge && Math.abs(image_loc.x - (roi.x + roi.width / 2)) < roi.width / 6;\n\n            if (want_move)\n                this.drag_code = \"move\";\n            else {\n                var on_left_edge = image_loc.x < roi.x + tolerance;\n                var on_right_edge = image_loc.x > roi.x + roi.width - tolerance;\n                var on_bottom_edge = image_loc.y > roi.y + roi.height - tolerance;\n                if (on_left_edge) {\n                    if (on_top_edge)\n                        this.drag_code = \"nw-resize\";\n                    else if (on_bottom_edge)\n                        this.drag_code = \"sw-resize\";\n                    else\n                        this.drag_code = \"w-resize\";\n                } else if (on_right_edge) {\n                    if (on_top_edge)\n                        this.drag_code = \"ne-resize\";\n                    else if (on_bottom_edge)\n                        this.drag_code = \"se-resize\";\n                    else\n                        this.drag_code = \"e-resize\";\n                } else if (on_top_edge) {\n                    if (on_left_edge)\n                        this.drag_code = \"nw-resize\";\n                    else if (on_right_edge)\n                        this.drag_code = \"ne-resize\";\n                    else\n                        this.drag_code = \"n-resize\";\n                } else if (on_bottom_edge) {\n                    if (on_left_edge)\n                        this.drag_code = \"sw-resize\";\n                    else if (on_right_edge)\n                        this.drag_code = \"se-resize\";\n                    else\n                        this.drag_code = \"s-resize\";\n                }\n            }\n\n            if (this.drag_code != undefined)\n                this.drag_roi = i;\n        }\n    }\n}\n\n/* update the position of the drag_roi to the given image loc\n */\nFITS.prototype.moveROI = function(image_loc) {\n    var roi = this.rois[this.drag_roi];\n    var new_code = undefined;\n\n    if (this.drag_code == \"move\") {\n        // draw ROI centered at image_loc\n        // beware fractional x or y when roi width is odd\n        roi.x = Math.min(Math.max(0, image_loc.x + this.drag_mvos.dx - Math.round(roi.width / 2 + 0.5)),\n            this.width - roi.width);\n        roi.y = Math.min(Math.max(0, image_loc.y + this.drag_mvos.dy - Math.round(roi.height / 2 + 0.5)),\n            this.height - roi.height);\n\n    } else if (this.drag_code == \"n-resize\") {\n        var dy = image_loc.y - roi.y;\n        roi.y += dy;\n        roi.height -= dy;\n        if (roi.height < 0)\n            new_code = 's-resize';\n\n    } else if (this.drag_code == \"s-resize\") {\n        roi.height += image_loc.y - (roi.y + roi.height);\n        if (roi.height < 0)\n            new_code = 'n-resize';\n\n    } else if (this.drag_code == \"e-resize\") {\n        roi.width += image_loc.x - (roi.x + roi.width);\n        if (roi.width < 0)\n            new_code = 'w-resize';\n\n    } else if (this.drag_code == \"w-resize\") {\n        var dx = image_loc.x - roi.x;\n        roi.x += dx;\n        roi.width -= dx;\n        if (roi.width < 0)\n            new_code = 'e-resize';\n\n    } else if (this.drag_code == \"ne-resize\") {\n        roi.width += image_loc.x - (roi.x + roi.width);\n        var dy = image_loc.y - roi.y;\n        roi.y += dy;\n        roi.height -= dy;\n        if (roi.width < 0 && roi.height < 0)\n            new_code = 'sw-resize';\n        else if (roi.width < 0)\n            new_code = 'nw-resize';\n        else if (roi.height < 0)\n            new_code = 'se-resize';\n\n    } else if (this.drag_code == \"se-resize\") {\n        roi.width += image_loc.x - (roi.x + roi.width);\n        roi.height += image_loc.y - (roi.y + roi.height);\n        if (roi.width < 0 && roi.height < 0)\n            new_code = 'nw-resize';\n        else if (roi.width < 0)\n            new_code = 'sw-resize';\n        else if (roi.height < 0)\n            new_code = 'ne-resize';\n\n    } else if (this.drag_code == \"nw-resize\") {\n        var dy = image_loc.y - roi.y;\n        roi.y += dy;\n        roi.height -= dy;\n        var dx = image_loc.x - roi.x;\n        roi.x += dx;\n        roi.width -= dx;\n        if (roi.width < 0 && roi.height < 0)\n            new_code = 'se-resize';\n        else if (roi.width < 0)\n            new_code = 'ne-resize';\n        else if (roi.height < 0)\n            new_code = 'sw-resize';\n\n    } else if (this.drag_code == \"sw-resize\") {\n        var dx = image_loc.x - roi.x;\n        roi.x += dx;\n        roi.width -= dx;\n        roi.height += image_loc.y - (roi.y + roi.height);\n        if (roi.width < 0 && roi.height < 0)\n            new_code = 'ne-resize';\n        else if (roi.width < 0)\n            new_code = 'se-resize';\n        else if (roi.height < 0)\n            new_code = 'nw-resize';\n    }\n\n    if (new_code != undefined) {\n        if (roi.width < 0 && roi.height < 0) {\n            roi.x += roi.width;\n            roi.width = -roi.width;\n            roi.y += roi.height;\n            roi.height = -roi.height;\n            this.drag_code = new_code;\n        } else if (roi.width < 0) {\n            roi.x += roi.width;\n            roi.width = -roi.width;\n            this.drag_code = new_code;\n        } else if (roi.height < 0) {\n            roi.y += roi.height;\n            roi.height = -roi.height;\n            this.drag_code = new_code;\n        }\n    }\n\n    // avoid 0 size\n    if (roi.width == 0)\n        roi.width = 1;\n    if (roi.height == 0)\n        roi.height = 1;\n\n    // display\n    this.renderROI(roi, false, true);\n\n    // also redisplay image if we moved rois[this.icroi]\n    if (this.rois.length > 1 && roi == this.rois[this.icroi])\n        this.renderROI(this.rois[0], false, false);\n}\n\n/* clear the given canvas context\n */\nFITS.prototype.clearLayer = function(ctx) {\n    // ctx is already scaled to accept image coords\n    ctx.clearRect(0, 0, this.width, this.height);\n}\n\n/* our keyboard handler, much like a regular listener but includes the context FITS object in\n *   addition to the usual javascript event.\n * basically just record state changes for mag glass etc.\n * nice tutortial: http://javascript.info/tutorial/keyboard-events\n */\nfunction FITS_handleKeyboard(e, thisfits) {\n    e = e || event;\n\n    thisfits.showGlass = e.shiftKey;\n    //    thisfits.updateGlass ();\n}\n\n/* our real mousemove handler, much like a regular listener but includes the context FITS object in\n *   addition to the usual javascript event.\n * handles the glass and ROIs, if any, and calls user's callbacks, if any\n */\nfunction FITS_handleMouse(event, thisfits) {\n    // ignore until image is defined\n    if (!thisfits.image)\n        return;\n\n    // get image coords of mouse\n    var mic = thisfits.event2image(event);\n\n    // check whether over image\n    var over = (mic.x >= 0 && mic.x < thisfits.width &&\n        mic.y >= 0 && mic.y < thisfits.height);\n\n    // if not over, just render glass and update mouse loc at last known location\n    if (!over) {\n        if (thisfits.glass_mic) {\n            thisfits.mic = thisfits.glass_mic;\n            //        thisfits.updateGlass ();\n        }\n        // call user mouse moved callback, if any  TODO??\n        // if (thisfits.userMouseHandler != undefined)\n        // thisfits.userMouseHandler (thisfits.mic);\n        return;\n    }\n\n    // record as current valid location\n    thisfits.mic = mic;\n\n    // update glass, if any\n    //    thisfits.updateGlass ();\n}\n\n/* function user can call to get value of pixel at any FITS coordinate.\n * we return 0 if location is undefined or not valid\n */\nFITS.prototype.getPixelAtFITS = function(fitsloc) {\n    if (fitsloc == undefined)\n        return 0;\n    var imageloc = this.FITS2Image(fitsloc);\n    if (imageloc.x >= 0 && imageloc.x < this.width && imageloc.y >= 0 && imageloc.y < this.height)\n        return this.image[imageloc.y * this.width + imageloc.x];\n    else\n        return 0;\n}\n\n/* given an ROI and a canvas ID, display a histogram of the image pixels.\n * TODO: add tick marks\n */\nFITS.prototype.displayHistogram = function(roi, canvas_id) {\n    // handy\n    var ctx = canvas_id.getContext(\"2d\");\n    var graphw = canvas_id.width;\n    var graphh = canvas_id.height;\n    var stats = roi.stats;\n    var histo = stats.histo;\n    var lhmax = Math.log(stats.histomax);\n\n    // crisper without smoothing and coords centered on display pixels\n    noSmoothing(ctx);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.translate(0.5, 0.5);\n\n    // background\n    ctx.fillStyle = '#888';\n    ctx.fillRect(0, 0, graphw, graphh);\n\n    // draw histogram, depending on sparse or rich\n    if (graphw > histo.length) {\n        // connect shape across histogram\n        ctx.fillStyle = roi.color;\n        ctx.beginPath();\n        ctx.moveTo(0, graphh - 1);\n        for (var hx = 0; hx < histo.length; hx++) {\n            var x = Math.floor(graphw * hx / histo.length);\n            var y = (histo[hx] > 1) ? Math.floor(graphh * (1.0 - Math.log(histo[hx]) / lhmax)) : graphh - 1;\n            ctx.lineTo(x, y);\n        }\n        ctx.lineTo(graphw, graphh - 1);\n        ctx.lineTo(0, graphh - 1);\n        ctx.fill();\n    } else {\n        // draw every x\n        ctx.fillStyle = roi.color;\n        ctx.beginPath();\n        ctx.moveTo(0, graphh - 1);\n        for (var x = 0; x < graphw; x++) {\n            var hx = Math.floor(x * histo.length / graphw);\n            var y = (histo[hx] > 1) ? Math.floor(graphh * (1.0 - Math.log(histo[hx]) / lhmax)) : graphh - 1;\n            ctx.lineTo(x, y);\n        }\n        ctx.lineTo(graphw, graphh - 1);\n        ctx.lineTo(0, graphh - 1);\n        ctx.fill();\n    }\n\n    // draw border\n    ctx.strokeStyle = \"black\";\n    ctx.beginPath();\n    ctx.moveTo(0, 0);\n    ctx.lineTo(0, graphh);\n    ctx.lineTo(graphw, graphh);\n    ctx.lineTo(graphw, 0);\n    ctx.lineTo(0, 0);\n    ctx.stroke();\n\n    // mark the contrast limits\n\n    ctx.strokeStyle = \"#aa44aa\"; // \"median\" and \"magenta\" start with m\n    ctx.beginPath();\n    var medianx = Math.floor((graphw - 1) * (stats.median - stats.min) / stats.range);\n    ctx.moveTo(medianx, 0);\n    ctx.lineTo(medianx, graphh - 1);\n    ctx.stroke();\n\n    ctx.strokeStyle = \"#44aa44\"; // \"green\" rhythms with \"mean\"\n    ctx.beginPath();\n    var meanx = Math.floor((graphw - 1) * (stats.mean - stats.min) / stats.range);\n    ctx.moveTo(meanx, 0);\n    ctx.lineTo(meanx, graphh - 1);\n    ctx.stroke();\n\n    ctx.strokeStyle = \"black\";\n    ctx.beginPath();\n    var blackx = Math.floor((graphw - 1) * (roi.black - stats.min) / stats.range);\n    ctx.moveTo(blackx, 0);\n    ctx.lineTo(blackx, graphh - 1);\n    ctx.stroke();\n\n    ctx.strokeStyle = \"white\";\n    ctx.beginPath();\n    var whitex = Math.floor((graphw - 1) * (roi.white - stats.min) / stats.range);\n    ctx.moveTo(whitex, 0);\n    ctx.lineTo(whitex, graphh - 1);\n    ctx.stroke();\n\n    // console.log('x: ' + blackx + ' .. ' + whitex + ' about ' + medianx);\n    // console.log('p: ' + roi.black + ' .. ' + roi.white + ' about ' + stats.median);\n}\n\n/* disable image smoothing on the given canvas conext.\n * still experimental\n */\nfunction noSmoothing(ctx) {\n    ctx.imageSmoothingEnabled = false;\n    ctx.mozImageSmoothingEnabled = false;\n\n}\n\n/* The following wonderous bit of magic is from\n *   http://www.backalleycoder.com/2013/03/18/cross-browser-event-based-element-resize-detection\n * It creates the document function addResizeListener that connects a callback called whenever an element\n * is resized. It's unfortunate such as basic facility was not already provided.\n */\nfunction createResizeListener() {\n    var attachEvent = document.attachEvent;\n    var isIE = navigator.userAgent.match(/Trident/);\n    var requestFrame = (function() {\n        var raf = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame ||\n            function(fn) {\n                return window.setTimeout(fn, 20);\n            };\n        return function(fn) {\n            return raf(fn);\n        };\n    })();\n\n    var cancelFrame = (function() {\n        var cancel = window.cancelAnimationFrame || window.mozCancelAnimationFrame || window.webkitCancelAnimationFrame ||\n            window.clearTimeout;\n        return function(id) {\n            return cancel(id);\n        };\n    })();\n\n    function resizeListener(e) {\n        var win = e.target || e.srcElement;\n        if (win.__resizeRAF__) cancelFrame(win.__resizeRAF__);\n        win.__resizeRAF__ = requestFrame(function() {\n            var trigger = win.__resizeTrigger__;\n            trigger.__resizeListeners__.forEach(function(fn) {\n                fn.call(trigger, e);\n            });\n        });\n    }\n\n    function objectLoad(e) {\n        this.contentDocument.defaultView.__resizeTrigger__ = this.__resizeElement__;\n        this.contentDocument.defaultView.addEventListener('resize', resizeListener);\n    }\n\n    window.addResizeListener = function(element, fn) {\n        if (!element.__resizeListeners__) {\n            element.__resizeListeners__ = [];\n            if (attachEvent) {\n                element.__resizeTrigger__ = element;\n                element.attachEvent('onresize', resizeListener);\n            } else {\n                if (getComputedStyle(element).position == 'static') element.style.position = 'relative';\n                var obj = element.__resizeTrigger__ = document.createElement('object');\n                obj.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n                obj.__resizeElement__ = element;\n                obj.onload = objectLoad;\n                obj.type = 'text/html';\n                if (isIE) element.appendChild(obj);\n                obj.data = 'about:blank';\n                if (!isIE) element.appendChild(obj);\n            }\n        }\n        element.__resizeListeners__.push(fn);\n    };\n\n    window.removeResizeListener = function(element, fn) {\n        element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n        if (!element.__resizeListeners__.length) {\n            if (attachEvent) element.detachEvent('onresize', resizeListener);\n            else {\n                element.__resizeTrigger__.contentDocument.defaultView.removeEventListener('resize', resizeListener);\n                element.__resizeTrigger__ = !element.removeChild(element.__resizeTrigger__);\n            }\n        }\n    }\n}\n","function copy(text, target) {\n    setTimeout(function() {\n        $('.tooltip').fadeOut('slow');\n    }, 500);\n    var input = document.createElement('input');\n    input.setAttribute('value', text);\n    document.body.appendChild(input);\n    input.select();\n    var result = document.execCommand('copy');\n    document.body.removeChild(input)\n    return result;\n}\n","document.addEventListener('DOMContentLoaded', function() {\n\n    const myDefaultAllowList = bootstrap.Popover.Default.allowList;\n\n    myDefaultAllowList.table = [];\n    myDefaultAllowList.tr = [];\n    myDefaultAllowList.td = ['data-bs-option'];\n    myDefaultAllowList.th = [];\n    myDefaultAllowList.div = [];\n    myDefaultAllowList.tbody = [];\n    myDefaultAllowList.thead = [];\n\n    $('[data-bs-toggle=\"popover\"]').popover();\n\n    var ttDefaultAllowList = bootstrap.Tooltip.Default.allowList;\n    ttDefaultAllowList.table = [];\n    ttDefaultAllowList.tr = [];\n    ttDefaultAllowList.td = ['data-bs-option'];\n    ttDefaultAllowList.th = [];\n    ttDefaultAllowList.div = [];\n    ttDefaultAllowList.tbody = [];\n    ttDefaultAllowList.thead = [];\n\n    $('[data-bs-toggle=\"tooltip\"]').tooltip();\n\n});\n\n$(document).ready(function() {\n    $('body').on('inserted.bs.tooltip', function(e) {\n        var $target = $(e.target);\n\n        // Keep track so we can check if mouse is hovering over the tooltip\n        $('[role=\"tooltip\"]').hover(function() {\n            $(this).toggleClass('hover');\n        });\n\n        $target.on('hide.bs.tooltip', function(e) {\n            // If tooltip is under the mouse, prevent hide but\n            // add handler to hide when mouse leaves tooltip\n            if ($('[role=\"tooltip\"]').hasClass('hover')) {\n                $('[role=\"tooltip\"]').on('mouseleave', function() {\n                    setTimeout(function() {\n                        $target.tooltip('hide');\n                    }, 200);\n                });\n                // Tell bootstrap tooltip to bail and not actually hide\n                e.preventDefault();\n                return;\n            }\n        });\n    });\n});\n"]}