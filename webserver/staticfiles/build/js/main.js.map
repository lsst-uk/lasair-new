{"version":3,"sources":["volt.js","lasair_lightcurve.js","lasair_lightcurve_apparent.js","lasair_js9.js","lasair_datatables.js","fitsview_init.js","fitsview.js","lasair_utils.js","lasair_fixes.js"],"names":["d","document","plotlc","data","div_id","bluelines","gmag","gfmag","ngmag","gt","gft","ngt","gerror","gferror","gra","gdec","rmag","rfmag","nrmag","rt","rft","nrt","rerror","rferror","rra","rdec","g","r","candidates","first_ra","Number","objectData","ramean","first_dec","decmean","now_mjd","mjdmin_ago","mjdmax_ago","minmag","maxmag","lc_div","forEach","item","y","magpsf","x","since_now","e","sigmapsf","x2","ra","y2","dec","fid","pos","isdiffpos","push","getElementById","shapes","type","x0","x1","y0","y1","line","color","dash","Plotly","newPlot","error_y","opacity","array","visible","mode","marker","size","symbol","margin","t","displayModeBar","showlegend","xaxis","title","rangemode","tickformat","yaxis","autorange","plotlc_apparent","dc_mag","mjd","dc_sigmag","det","lcg","lcr","plot","fixJS9ExtraStyles","next","let","fitsImgs","querySelectorAll","fits","checkExist","setInterval","im","$","id","length","clearInterval","JS9","LookupDisplay","ResizeDisplay","width","plugins","plugin","style","height","offsetWidth","setTimeout","loadFitsImages","allFits","fitsScr","getAttribute","newItem","createElement","uuid","uuidv4","innerHTML","classList","contains","parentNode","replaceChild","Preload","scale","zoom","onload","setDefaultParams","display","collapseJS9Extras","myCollapse","add","SetZoom","SetColormap","SetScale","AddRegions","radius","replace","c","crypto","getRandomValues","Uint8Array","toString","toggleJS9Menus","event","preventDefault","menus","getElementsByClassName","i","toggle","addEventListener","Swal","mixin","customClass","confirmButton","cancelButton","buttonsStyling","themeSettingsCollapse","themeSettingsEl","themeSettingsExpandEl","bootstrap","Collapse","show","window","localStorage","getItem","remove","hide","setItem","breakpoints","sm","md","lg","xl","sidebar","iconNotifications","body","clientWidth","querySelector","position","slice","call","map","el","background","tooltipTriggerEl","Tooltip","popoverTriggerEl","Popover","Datepicker","buttonClass","slider","sliderId","minValue","maxValue","sliderValue","sliderValueId","startValue","noUiSlider","create","start","parseInt","connect","range","min","max","low","f","tooltips","on","a","b","textContent","Chartist","Line","labels","series","showArea","fullWidth","tooltip","axisX","showGrid","axisY","showLabel","labelInterpolationFnc","value","Bar","offset","element","animate","begin","index","dur","from","path","clone","translate","chartRect","stringify","to","easing","Svg","Easing","easeOutQuint","sum","Pie","Math","round","reduce","high","donut","donutWidth","donutSolid","button","this","loadContent","allLoaded","setAttribute","SmoothScroll","speed","speedAsDuration","Date","getFullYear","Glide","startAt","perView","mount","autoplay","billingSwitchEl","countUpStandard","countUp","CountUp","startVal","countUpPremium","billingSwitch","checked","reset","dataTableEl","simpleDatatables","DataTable","dataTableEls","tableId","perPage","hasAttribute","dataTable","placeholder","noRows","info","layout","top","bottom","perPageSelect","headings","columns","dt","includes","idx","indexOf","sort","CSS","escape","dataset","filename","columnDelimiter","replacer","space","export","globalOpts","alerts","updateTitlebar","imageOpts","inherit","contrast","bias","invert","exp","colormap","overlay","scaleclipping","scalemin","NaN","scalemax","flip","rot90","rotate","zscalecontrast","zscalesamples","zscaleline","wcssys","lcs","valpos","sigma","alpha","nancolor","nocolor","red","green","blue","zooms","topZooms","wcsalign","rotationMode","crosshair","disable","ltvbug","listonchange","whichonchange","fns","chain","fn","shift","fits_url","NROIS","gebi","start_fitsview","_fits","_fits_url","console","log","stretch_sel","setStretch","addROIChangedHandler","onROIChange","onunload","header_win","close","imageFromUrl","showHeader","newContrast","name","target","number","substring","contrast_value","setContrast","rois","onStretchSel","roi","redef","moved","eid","z","dh","displayStats","displayHistogram","onDisplayROI","roi_n","cb","enableROI","stats","fits_coords","image2FITS","minat_coords","minat","maxat_coords","maxat","pad","toFixed","mean","stddev","median","s","n","nadd","FITS","n_rois","tagName","isNaN","thisfits","roicolors","createResizeListener","addResizeListener","handleResize","Array","enabled","black","undefined","white","cvs","FITS_newCanvas","ctx","getContext","gcvs","gctx","FITS_handleMouse","FITS_handleKeyboard","icroi","image","header","rawheader","drew_glass","glass_size","glass_mag","glass_mic","mic","resize_scale","stretch","userMouseHandler","userROIChangedHandler","userGlassCanvas","drag_roi","drag_code","drag_mvos","dx","dy","cursors","n-resize","s-resize","e-resize","w-resize","ne-resize","sw-resize","nw-resize","se-resize","move","parent","cid","appendChild","showGlass","shiftKey","event2image","noSmoothing","imageSmoothingEnabled","mozImageSmoothingEnabled","raf","cancel","attachEvent","isIE","navigator","userAgent","match","requestFrame","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","cancelFrame","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","clearTimeout","resizeListener","win","srcElement","__resizeRAF__","trigger","__resizeTrigger__","__resizeListeners__","objectLoad","contentDocument","defaultView","__resizeElement__","obj","getComputedStyle","removeResizeListener","splice","detachEvent","removeEventListener","removeChild","copy","text","fadeOut","input","result","select","execCommand","prototype","xhr","XMLHttpRequest","response","status","setNewImage","open","responseType","overrideMimeType","send","fitsab","hlen","byteLength","key","val","card","String","fromCharCode","apply","parseFloat","SIMPLE","NAXIS1","NAXIS2","BITPIX","npixels","nbytes","abs","bzero","BZERO","bscale","BSCALE","dv","DataView","imgi","fitsi","getUint8","getInt16","getInt32","getFloat32","force","closed","write","documentElement","computeROIStats","pxi","maxatx","maxaty","minatx","minaty","sum2","p","sqrt","histo","histomax","bin","floor","histi","count","renderROI","findBlackAndWhite","divw","divh","setTransform","renderAll","nrois","enable","redefineROI","roi_defn","stretch_f","bw","icroi_stats","pixel","v","roiimage","ImageData","roidata","datai","gray","tempcan","putImageData","clearLayer","drawImage","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","renderGlass","image_loc","glassimgsz","ulglassx","ulglassy","glassw","glassh","imw","imh","glasssz","imageloc","fitsloc","JSON","parse","FITS2Image","imgcoords","iid_rect","pageX","pageY","clientX","clientY","getBoundingClientRect","pageXOffset","left","pageYOffset","addMouseHandler","handler","addResizeHandler","addGlassCanvas","canvas_id","findROI","tolerance","on_top_edge","on_left_edge","on_right_edge","on_bottom_edge","moveROI","new_code","clearRect","getPixelAtFITS","graphw","graphh","lhmax","fillStyle","fillRect","hx","fill","medianx","meanx","blackx","whitex","myDefaultAllowList","Default","allowList","table","tr","td","th","div","tbody","thead","popover","ttDefaultAllowList"],"mappings":"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","file":"main.js","sourcesContent":["/*\n\n=========================================================\n* Volt Pro - Premium Bootstrap 5 Dashboard\n=========================================================\n\n* Product Page: https://themesberg.com/product/admin-dashboard/volt-bootstrap-5-dashboard\n* Copyright 2021 Themesberg (https://www.themesberg.com)\n\n* Designed and coded by https://themesberg.com\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. Please contact us to request a removal. Contact us if you want to remove it.\n\n*/\n\n\"use strict\";\nconst d = document;\nd.addEventListener(\"DOMContentLoaded\", function(event) {\n\n    const swalWithBootstrapButtons = Swal.mixin({\n        customClass: {\n            confirmButton: 'btn btn-primary me-3',\n            cancelButton: 'btn btn-gray'\n        },\n        buttonsStyling: false\n    });\n\n    var themeSettingsEl = document.getElementById('theme-settings');\n    var themeSettingsExpandEl = document.getElementById('theme-settings-expand');\n\n    if (themeSettingsEl) {\n\n        var themeSettingsCollapse = new bootstrap.Collapse(themeSettingsEl, {\n            show: true,\n            toggle: false\n        });\n\n        if (window.localStorage.getItem('settings_expanded') === 'true') {\n            themeSettingsCollapse.show();\n            themeSettingsExpandEl.classList.remove('show');\n        } else {\n            themeSettingsCollapse.hide();\n            themeSettingsExpandEl.classList.add('show');\n        }\n\n        themeSettingsEl.addEventListener('hidden.bs.collapse', function() {\n            themeSettingsExpandEl.classList.add('show');\n            window.localStorage.setItem('settings_expanded', false);\n        });\n\n        themeSettingsExpandEl.addEventListener('click', function() {\n            themeSettingsExpandEl.classList.remove('show');\n            window.localStorage.setItem('settings_expanded', true);\n            setTimeout(function() {\n                themeSettingsCollapse.show();\n            }, 300);\n        });\n    }\n\n    // options\n    const breakpoints = {\n        sm: 540,\n        md: 720,\n        lg: 960,\n        xl: 1140\n    };\n\n    var sidebar = document.getElementById('sidebarMenu')\n    if (sidebar && d.body.clientWidth < breakpoints.lg) {\n        sidebar.addEventListener('shown.bs.collapse', function() {\n            document.querySelector('body').style.position = 'fixed';\n        });\n        sidebar.addEventListener('hidden.bs.collapse', function() {\n            document.querySelector('body').style.position = 'relative';\n        });\n    }\n\n    var iconNotifications = d.querySelector('.notification-bell');\n    if (iconNotifications) {\n        iconNotifications.addEventListener('shown.bs.dropdown', function() {\n            iconNotifications.classList.remove('unread');\n        });\n    }\n\n    [].slice.call(d.querySelectorAll('[data-background]')).map(function(el) {\n        el.style.background = 'url(' + el.getAttribute('data-background') + ')';\n    });\n\n    [].slice.call(d.querySelectorAll('[data-background-lg]')).map(function(el) {\n        if (document.body.clientWidth > breakpoints.lg) {\n            el.style.background = 'url(' + el.getAttribute('data-background-lg') + ')';\n        }\n    });\n\n    [].slice.call(d.querySelectorAll('[data-background-color]')).map(function(el) {\n        el.style.background = 'url(' + el.getAttribute('data-background-color') + ')';\n    });\n\n    [].slice.call(d.querySelectorAll('[data-color]')).map(function(el) {\n        el.style.color = 'url(' + el.getAttribute('data-color') + ')';\n    });\n\n    //Tooltips\n    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\n    var tooltipList = tooltipTriggerList.map(function(tooltipTriggerEl) {\n        return new bootstrap.Tooltip(tooltipTriggerEl)\n    })\n\n    // Popovers\n    var popoverTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"popover\"]'))\n    var popoverList = popoverTriggerList.map(function(popoverTriggerEl) {\n        return new bootstrap.Popover(popoverTriggerEl)\n    })\n\n    // Datepicker\n    var datepickers = [].slice.call(d.querySelectorAll('[data-datepicker]'))\n    var datepickersList = datepickers.map(function(el) {\n        return new Datepicker(el, {\n            buttonClass: 'btn'\n        });\n    })\n\n    if (d.querySelector('.input-slider-container')) {\n        [].slice.call(d.querySelectorAll('.input-slider-container')).map(function(el) {\n            var slider = el.querySelector(':scope .input-slider');\n            var sliderId = slider.getAttribute('id');\n            var minValue = slider.getAttribute('data-range-value-min');\n            var maxValue = slider.getAttribute('data-range-value-max');\n\n            var sliderValue = el.querySelector(':scope .range-slider-value');\n            var sliderValueId = sliderValue.getAttribute('id');\n            var startValue = sliderValue.getAttribute('data-range-value-low');\n\n            var c = d.getElementById(sliderId),\n                id = d.getElementById(sliderValueId);\n\n            noUiSlider.create(c, {\n                start: [parseInt(startValue)],\n                connect: [true, false],\n                //step: 1000,\n                range: {\n                    'min': [parseInt(minValue)],\n                    'max': [parseInt(maxValue)]\n                }\n            });\n        });\n    }\n\n    if (d.getElementById('input-slider-range')) {\n        var c = d.getElementById(\"input-slider-range\"),\n            low = d.getElementById(\"input-slider-range-value-low\"),\n            e = d.getElementById(\"input-slider-range-value-high\"),\n            f = [d, e];\n\n        noUiSlider.create(c, {\n            start: [parseInt(low.getAttribute('data-range-value-low')), parseInt(e.getAttribute('data-range-value-high'))],\n            connect: !0,\n            tooltips: true,\n            range: {\n                min: parseInt(c.getAttribute('data-range-value-min')),\n                max: parseInt(c.getAttribute('data-range-value-max'))\n            }\n        }), c.noUiSlider.on(\"update\", function(a, b) {\n            f[b].textContent = a[b]\n        });\n    }\n\n    //Chartist\n\n    if (d.querySelector('.ct-chart-sales-value')) {\n        //Chart 5\n        new Chartist.Line('.ct-chart-sales-value', {\n            labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n            series: [\n                [0, 10, 30, 40, 80, 60, 100]\n            ]\n        }, {\n            low: 0,\n            showArea: true,\n            fullWidth: true,\n            plugins: [\n                Chartist.plugins.tooltip()\n            ],\n            axisX: {\n                // On the x-axis start means top and end means bottom\n                position: 'end',\n                showGrid: true\n            },\n            axisY: {\n                // On the y-axis start means left and end means right\n                showGrid: false,\n                showLabel: false,\n                labelInterpolationFnc: function(value) {\n                    return '$' + (value / 1) + 'k';\n                }\n            }\n        });\n    }\n\n    if (d.querySelector('.ct-chart-ranking')) {\n        var chart = new Chartist.Bar('.ct-chart-ranking', {\n            labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n            series: [\n                [1, 5, 2, 5, 4, 3],\n                [2, 3, 4, 8, 1, 2],\n            ]\n        }, {\n            low: 0,\n            showArea: true,\n            plugins: [\n                Chartist.plugins.tooltip()\n            ],\n            axisX: {\n                // On the x-axis start means top and end means bottom\n                position: 'end'\n            },\n            axisY: {\n                // On the y-axis start means left and end means right\n                showGrid: false,\n                showLabel: false,\n                offset: 0\n            }\n        });\n\n        chart.on('draw', function(data) {\n            if (data.type === 'line' || data.type === 'area') {\n                data.element.animate({\n                    d: {\n                        begin: 2000 * data.index,\n                        dur: 2000,\n                        from: data.path.clone().scale(1, 0).translate(0, data.chartRect.height()).stringify(),\n                        to: data.path.clone().stringify(),\n                        easing: Chartist.Svg.Easing.easeOutQuint\n                    }\n                });\n            }\n        });\n    }\n\n    if (d.querySelector('.ct-chart-traffic-share')) {\n        var data = {\n            series: [70, 20, 10]\n        };\n\n        var sum = function(a, b) {\n            return a + b\n        };\n\n        new Chartist.Pie('.ct-chart-traffic-share', data, {\n            labelInterpolationFnc: function(value) {\n                return Math.round(value / data.series.reduce(sum) * 100) + '%';\n            },\n            low: 0,\n            high: 8,\n            donut: true,\n            donutWidth: 20,\n            donutSolid: true,\n            fullWidth: false,\n            showLabel: false,\n            plugins: [\n                Chartist.plugins.tooltip()\n            ],\n        });\n    }\n\n    if (d.getElementById('loadOnClick')) {\n        d.getElementById('loadOnClick').addEventListener('click', function() {\n            var button = this;\n            var loadContent = d.getElementById('extraContent');\n            var allLoaded = d.getElementById('allLoadedText');\n\n            button.classList.add('btn-loading');\n            button.setAttribute('disabled', 'true');\n\n            setTimeout(function() {\n                loadContent.style.display = 'block';\n                button.style.display = 'none';\n                allLoaded.style.display = 'block';\n            }, 1500);\n        });\n    }\n\n    var scroll = new SmoothScroll('a[href*=\"#\"]', {\n        speed: 500,\n        speedAsDuration: true\n    });\n\n    if (d.querySelector('.current-year')) {\n        d.querySelector('.current-year').textContent = new Date().getFullYear();\n    }\n\n    // Glide JS\n\n    if (d.querySelector('.glide')) {\n        new Glide('.glide', {\n            type: 'carousel',\n            startAt: 0,\n            perView: 3\n        }).mount();\n    }\n\n    if (d.querySelector('.glide-testimonials')) {\n        new Glide('.glide-testimonials', {\n            type: 'carousel',\n            startAt: 0,\n            perView: 1,\n            autoplay: 2000\n        }).mount();\n    }\n\n    if (d.querySelector('.glide-clients')) {\n        new Glide('.glide-clients', {\n            type: 'carousel',\n            startAt: 0,\n            perView: 5,\n            autoplay: 2000\n        }).mount();\n    }\n\n    if (d.querySelector('.glide-news-widget')) {\n        new Glide('.glide-news-widget', {\n            type: 'carousel',\n            startAt: 0,\n            perView: 1,\n            autoplay: 2000\n        }).mount();\n    }\n\n    if (d.querySelector('.glide-autoplay')) {\n        new Glide('.glide-autoplay', {\n            type: 'carousel',\n            startAt: 0,\n            perView: 3,\n            autoplay: 2000\n        }).mount();\n    }\n\n    // Pricing countup\n    var billingSwitchEl = d.getElementById('billingSwitch');\n    if (billingSwitchEl) {\n        const countUpStandard = new countUp.CountUp('priceStandard', 99, {\n            startVal: 199\n        });\n        const countUpPremium = new countUp.CountUp('pricePremium', 199, {\n            startVal: 299\n        });\n\n        billingSwitchEl.addEventListener('change', function() {\n            if (billingSwitch.checked) {\n                countUpStandard.start();\n                countUpPremium.start();\n            } else {\n                countUpStandard.reset();\n                countUpPremium.reset();\n            }\n        });\n    }\n\n    // DATA TABLES\n    var dataTableEl = d.getElementById('datatable');\n    if (dataTableEl) {\n        const dataTable = new simpleDatatables.DataTable(dataTableEl);\n    }\n\n});\n","function plotlc(data, div_id, bluelines) {\n    var gmag = [];\n    var gfmag = [];\n    var ngmag = [];\n    var gt = [];\n    var gft = [];\n    var ngt = [];\n    var gerror = [];\n    var gferror = [];\n\n    var gra = [];\n    var gdec = [];\n\n    var rmag = [];\n    var rfmag = [];\n    var nrmag = [];\n    var rt = [];\n    var rft = [];\n    var nrt = [];\n    var rerror = [];\n    var rferror = [];\n\n    var rra = [];\n    var rdec = [];\n    var g = 'rgb(104,139,46)';\n    var r = 'rgb(244,2,52)';\n    var ng = 'rgb(216,237,207)';\n    var nr = 'rgb(255,209,209)';\n    var candidates = data.candidates;\n    //first_item = data[0];\n    //first_ra = Number(first_item.ra)*3600;\n    //first_dec = Number(first_item.dec)*3600;\n    var first_ra = Number(data.objectData.ramean) * 3600;\n    var first_dec = Number(data.objectData.decmean) * 3600;\n    var now_mjd = data.objectData.now_mjd;\n    var mjdmin_ago = data.objectData.mjdmin_ago;\n    var mjdmax_ago = data.objectData.mjdmax_ago;\n    var minmag = 100;\n    var maxmag = 0;\n\n    candidates.forEach(function(item) {\n        var y = Number(item.magpsf);\n        if (y > maxmag) {\n            maxmag = y;\n        }\n        if (y < minmag) {\n            minmag = y;\n        }\n        var x = Number(item.since_now);\n        var e = Number(item.sigmapsf);\n        var x2 = first_ra - Number(item.ra) * 3600;\n        var y2 = first_dec - Number(item.dec) * 3600;\n        var fid = Number(item.fid);\n        var det = (item.candid)\n        if (det) {\n            var pos = (item.isdiffpos == 't' || item.isdiffpos == '1');\n            if (fid == 1 && pos) {\n                gmag.push(y);\n                gt.push(x);\n                gerror.push(e);\n                gra.push(x2);\n                gdec.push(y2);\n            } else if (fid == 2 && pos) {\n                rmag.push(y);\n                rt.push(x);\n                rerror.push(e);\n                rra.push(x2);\n                rdec.push(y2);\n            }\n            if (fid == 1 && !pos) {\n                gfmag.push(y);\n                gft.push(x);\n                gferror.push(e);\n                gra.push(x2);\n                gdec.push(y2);\n            } else if (fid == 2 && !pos) {\n                rfmag.push(y);\n                rft.push(x);\n                rferror.push(e);\n                rra.push(x2);\n                rdec.push(y2);\n            }\n        } else {\n            if (fid == 1) {\n                ngmag.push(y);\n                ngt.push(x);\n            } else if (fid == 2) {\n                nrmag.push(y);\n                nrt.push(x);\n            }\n        }\n    });\n\n    var lc_div = document.getElementById(div_id);\n    var lcg = {\n        x: gt,\n        y: gmag,\n        error_y: {\n            type: 'data',\n            color: g,\n            opacity: 0.7,\n            array: gerror,\n            visible: true\n        },\n        mode: 'markers',\n        marker: {\n            color: g,\n            size: 12\n        },\n        type: 'scatter'\n    }\n    var lcr = {\n        x: rt,\n        y: rmag,\n        error_y: {\n            type: 'data',\n            color: r,\n            array: rerror,\n            opacity: 0.7,\n            visible: true\n        },\n        mode: 'markers',\n        marker: {\n            color: r,\n            size: 12\n        },\n        type: 'scatter'\n    }\n    var lcfg = {\n        x: gft,\n        y: gfmag,\n        error_y: {\n            type: 'data',\n            color: g,\n            opacity: 0.7,\n            array: gferror,\n            visible: true\n        },\n        mode: 'markers',\n        marker: {\n            color: g,\n            size: 12,\n            symbol: \"circle-open\"\n        },\n        type: 'scatter'\n    }\n    var lcfr = {\n        x: rft,\n        y: rfmag,\n        error_y: {\n            type: 'data',\n            color: r,\n            array: rferror,\n            opacity: 0.7,\n            visible: true\n        },\n        mode: 'markers',\n        marker: {\n            color: r,\n            size: 12,\n            symbol: \"circle-open\"\n        },\n        type: 'scatter'\n    }\n    var nlcg = {\n        x: ngt,\n        y: ngmag,\n        mode: 'markers',\n        marker: {\n            color: ng,\n            symbol: \"diamond\"\n        },\n        type: 'scatter'\n    }\n    var nlcr = {\n        x: nrt,\n        y: nrmag,\n        mode: 'markers',\n        marker: {\n            color: nr,\n            symbol: \"diamond\"\n        },\n        type: 'scatter'\n    }\n\n    if (bluelines) {\n        var shapes = [{\n            type: 'line',\n            x0: -mjdmin_ago,\n            x1: -mjdmin_ago,\n            y0: minmag,\n            y1: maxmag,\n            line: {\n                color: 'blue',\n                dash: 'dot'\n            }\n        }, {\n            type: 'line',\n            x0: -mjdmax_ago,\n            x1: -mjdmax_ago,\n            y0: minmag,\n            y1: maxmag,\n            line: {\n                color: 'blue',\n                dash: 'dot'\n            }\n        }, ];\n    } else {\n        var shapes = []\n    }\n\n    Plotly.newPlot(lc_div, [lcg, lcr, lcfg, lcfr, nlcg, nlcr], {\n        margin: {\n            t: 0\n        },\n        displayModeBar: false,\n        showlegend: false,\n        xaxis: {\n            title: 'MJD - ' + now_mjd,\n            rangemode: 'tozero',\n            tickformat: \".f\"\n        },\n        yaxis: {\n            title: 'Difference Magnitude',\n            autorange: 'reversed'\n        },\n        shapes: shapes,\n    }, {\n        displayModeBar: false\n    });\n\n    var radec_div = document.getElementById('radec');\n\n    var radecg = {\n        x: gra,\n        y: gdec,\n        mode: 'markers',\n        marker: {\n            color: 'rgb(104,139,46)'\n        },\n        type: 'scatter'\n    }\n\n    var radecr = {\n            x: rra,\n            y: rdec,\n            mode: 'markers',\n            marker: {\n                color: 'rgb(244,2,52)'\n            },\n            type: 'scatter'\n        }\n        /*\n        Plotly.plot(radec_div, [radecg, radecr], {\n            margin: { t: 0 },\n            showlegend: false,\n                width: 370,\n                height: 285,\n            shapes: [\n                {\n                    type: 'circle',\n                    xref: '0',\n                    yref: '0',\n                    x0: -1.5,\n                    y0: -1.5,\n                    x1: 1.5,\n                    y1: 1.5,\n                    opacity: 0.3,\n                    fillcolor: '#bbded6',\n                    line: {\n                        color: 'black'\n                    }\n                }]\n        }, {displayModeBar: false}\n        );\n        */\n}\n","function plotlc_apparent(data){\ngmag = []\ngt = []\ngerror = []\n\nrmag = []\nrt = []\nrerror = []\n\ng = 'rgb(104,139,46)';\nr = 'rgb(244,2,52)'; \ncandidates = data.candidates;\n\ncandidates.forEach(function(item){\n    y = Number(item.dc_mag);\n    x = Number(item.mjd);\n    e = Number(item.dc_sigmag);\n    fid = Number(item.fid);\n    det = (item.candid)\n    if(det){\n        if(fid == 1){\n            gmag.push(y);\n            gt.push(x);\n            gerror.push(e);\n        }\n        else if(fid ==2){\n            rmag.push(y);\n            rt.push(x);\n            rerror.push(e);\n        }\n    }\n});\n\nlc_div = document.getElementById('lc_apparent');\nvar lcg = {x:gt, y: gmag, error_y:{\n        type:'data',\n        color: g,\n        opacity: 0.7,\n        array: gerror,\n        visible: true\n        },\n    mode:'markers',\n    marker: { color:g, size: 8 },\n    type:'markers'\n}\nvar lcr = {x:rt, y: rmag, error_y:{\n        type:'data',\n        color: r,\n        array: rerror,\n        opacity: 0.7,\n        visible: true\n        },\n        mode:'markers',\n    marker: { color:r, size: 8 },\n        type:'markers'\n}\n\nPlotly.plot(lc_div, [lcg, lcr], {\n    margin: { t: 0 }, \n    displayModeBar: false, \n    showlegend: false,\n    xaxis: {\n        title:'MJD',\n        tickformat :\".f\" },\n    yaxis: {\n        title: 'Apparent Magnitude',\n        autorange: 'reversed'    \n    }\n     },\n    {displayModeBar: false});\n}\n","document.addEventListener('DOMContentLoaded', function() {\n\n    JS9.globalOpts.alerts = false;\n    JS9.globalOpts.updateTitlebar = false;\n\n    JS9.imageOpts = {\n        inherit: false, // inherit props from previous image?\n        contrast: 1.0, // default color contrast\n        bias: 0.5, // default color bias\n        invert: false, // default colormap invert\n        exp: 1000, // default exp value for scaling\n        colormap: \"heat\", // default color map\n        overlay: true, // display png/jpeg overlay?\n        scale: \"linear\", // default scale algorithm\n        scaleclipping: \"dataminmax\", // \"dataminmax\", \"zscale\", or \"user\" (when scalemin, scalemax is supplied)\n        scalemin: Number.NaN, // default scale min is undefined\n        scalemax: Number.NaN, // default scale max is undefined\n        flip: \"none\", // default flip state\n        rot90: 0, // default 90 deg rotation state\n        rotate: 0, // default rotation state\n        zscalecontrast: 0.25, // default from ds9\n        zscalesamples: 600, // default from ds9\n        zscaleline: 120, // default from ds9\n        wcssys: \"native\", // default WCS sys\n        lcs: \"physical\", // default logical coordinate system\n        valpos: false, // whether to display value/position\n        sigma: \"none\", // gauss blur sigma or none\n        opacity: 1.0, // opacity between 0 and 1\n        alpha: 255, // alpha for image (but use opacity!)\n        nancolor: \"#FF0000\", // 6-digit #hex color for NaN values\n        nocolor: {\n            red: 0,\n            green: 0,\n            blue: 0,\n            alpha: 0\n        }, // static color map no color\n        // xcen: 0,                         // default x center pos to pan to\n        // ycen: 0,                         // default y center pos to pan to\n        zoom: \"toFit\", // default zoom factor\n        zooms: 6, // how many zooms in each direction?\n        topZooms: 2, // how many zooms are at top level?\n        wcsalign: true, // align image using wcs after reproj?\n        rotationMode: \"relative\", // default: relative or absolute?\n        crosshair: true, // enable crosshair?\n        disable: [], // list of disabled core services\n        ltvbug: false, // add 0.5/ltm to image LTV values?\n        listonchange: false, // whether to list after a reg change\n        whichonchange: \"selected\" // which to list (\"all\" or \"selected\")\n    };\n\n    let fns = [loadFitsImages, fixJS9ExtraStyles, collapseJS9Extras];\n    // chain function will call the supplied function\n    // and recursively call the chain function with the\n    // the next element in the array\n    function chain(fn) {\n        if (fn) {\n            fn(() => chain(fns.shift()));\n        }\n    }\n    chain(fns.shift());\n\n});\n\nfunction fixJS9ExtraStyles(next) {\n    // MAKE SQUARE\n    let fitsImgs = document.querySelectorAll(\".JS9\");\n    fitsImgs.forEach(function(fits) {\n        var checkExist = setInterval(function() {\n            if ($(`#${fits.id}`).length) {\n                clearInterval(checkExist);\n                var im = JS9.LookupDisplay(fits.id);\n                JS9.ResizeDisplay(fits.id, im.width, im.width);\n            }\n        }, 100); // check every 100ms\n\n    });\n    // MAKE SQUARE\n    var checkExist = setInterval(function() {\n        if (document.querySelectorAll(\".ImExamRadialProj\").length) {\n            clearInterval(checkExist);\n            let plugins = document.querySelectorAll(\".ImExamRadialProj\");\n\n            plugins.forEach(function(plugin) {\n                plugin.style.height = plugin.offsetWidth + 'px';\n            });\n        }\n    }, 100); // check every 100ms\n    setTimeout(() => {\n        next()\n    }, 2000);\n}\n\nfunction loadFitsImages(next) {\n    let allFits = document.querySelectorAll(\".fitsStamp\");\n    allFits.forEach(function(fits) {\n        let fitsScr = fits.getAttribute(\"src\");\n        const newItem = document.createElement('span');\n        let uuid = uuidv4();\n        newItem.innerHTML = `<div class=\"JS9\" data-width=\"100%\" id=\"${uuid}\" ></div>`;\n        if (fits.classList.contains(\"fits-lite\")) {\n            // DO NOTHING\n        } else if (fits.classList.contains(\"fits-toggle\")) {\n            newItem.innerHTML = `<div class=\"JS9Menubar d-none\" id=\"${uuid}Menubar\" data-width=\"100%\"></div>` + newItem.innerHTML\n        } else {\n            newItem.innerHTML = `<div class=\"JS9Menubar\" id=\"${uuid}Menubar\" data-width=\"100%\"></div>` + newItem.innerHTML\n        }\n\n        fits.parentNode.replaceChild(newItem, fits);\n\n        JS9.Preload(fitsScr, {\n            scale: 'linear',\n            zoom: 'toFit',\n            onload: setDefaultParams\n        }, {\n            display: uuid\n        });\n    });\n    next();\n};\n\nfunction collapseJS9Extras(next) {\n\n    var myCollapse = document.getElementById('collapseJS9Extras');\n    if (typeof myCollapse !== 'undefined' && myCollapse !== null) {\n        myCollapse.classList.add(\"collapse\");\n        next();\n    }\n}\n\nfunction setDefaultParams(display) {\n\n    JS9.SetZoom('ToFit', {\n        display: display\n    });\n    JS9.SetColormap('grey', {\n        display: display\n    });\n    JS9.SetScale('dataminmax', {\n        display: display\n    });\n    JS9.AddRegions(\"circle\", {\n        radius: 10\n    }, {\n        display: display\n    });\n    // JS9.SetOpacity(opacity, floorvalue, flooropacity);\n    // JS9.SetFlip(flip);\n    // JS9.SetRotate(rot);\n    // JS9.SetParam(param, value);\n\n}\n\nfunction uuidv4() {\n    return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>\n        (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n    );\n}\n\nfunction toggleJS9Menus() {\n    event.preventDefault();\n    let menus = document.getElementsByClassName('JS9Menubar');\n    for (var i = 0; i < menus.length; i++) {\n        menus[i].classList.toggle('d-none');\n    }\n}\n","document.addEventListener('DOMContentLoaded', function() {\n\n    let dataTableEls = d.querySelectorAll('.datatable');\n    dataTableEls.forEach(function(dataTableEl) {\n        if (dataTableEl) {\n\n            let tableId = null;\n            if (dataTableEl.hasAttribute('id')) {\n                tableId = dataTableEl.id;\n            }\n\n            let perPage = 100;\n            if (dataTableEl.hasAttribute('data-perPage')) {\n                perPage = dataTableEl.getAttribute('data-perPage');\n            }\n\n            const dataTable = new simpleDatatables.DataTable(dataTableEl, {\n                labels: {\n                    placeholder: \"Search table...\",\n                    perPage: \"{select} rows per page\",\n                    noRows: \"No objects found\",\n                    info: \"Showing {start} to {end} of {rows} rows\",\n                },\n                layout: {\n                    top: \"{search}\",\n                    bottom: \"{select}{info}{pager}\"\n                },\n                perPage: perPage,\n                perPageSelect: [5, 10, 50, 100, 500, 10000]\n            });\n\n            const headings = dataTable.columns().dt.labels;\n\n            if (headings.includes(\"objectId\")) {\n                const idx = headings.indexOf(\"objectId\");\n                dataTable.columns().sort(idx, \"desc\")\n            } else if (headings.includes(\"Created\")) {\n                const idx = headings.indexOf(\"Created\");\n                dataTable.columns().sort(idx, \"desc\")\n            }\n            // console.log(dataTable.columns().dt.labels);\n\n            if (tableId !== null) {\n                document.querySelectorAll(`a[data-table=${CSS.escape(tableId)}]`).forEach(function(el) {\n                    el.addEventListener(\"click\", function(e) {\n\n                        var type = el.dataset.type;\n                        var filename = el.dataset.filename;\n\n                        if (filename == null) {\n                            filename = \"lasair-export\";\n                        }\n\n                        var data = {\n                            type: type,\n                            filename: filename,\n                        };\n\n                        if (type === \"csv\") {\n                            data.columnDelimiter = \",\";\n                        }\n\n                        if (type === \"json\") {\n                            data.replacer = null;\n                            data.space = 4;\n                        }\n\n                        dataTable.export(data);\n                    });\n                });\n            }\n        }\n\n    });\n\n});\n","var NROIS = 0; // number of ROIS -- sufficient for code but not for html\nvar fits;\nvar fits_url;\n// handy\nfunction gebi(id) {\n    return document.getElementById(id);\n}\n\nfunction start_fitsview(_fits, _fits_url) {\n    fits = _fits;\n    fits_url = _fits_url;\n    console.log(fits_url);\n\n    // set initial stretch\n    var stretch_sel = gebi(\"stretch_sel\");\n    if (stretch_sel) {\n        console.log(stretch_sel.value);\n        fits.setStretch(stretch_sel.value);\n    } else {\n        console.log('no stretch div');\n        fits.setStretch(\"linear\");\n    }\n\n    // add handler to report new ROI\n    fits.addROIChangedHandler(onROIChange);\n\n    // connect clean up function\n    window.onunload = function() {\n        if (fits.header_win)\n            fits.header_win.close();\n    };\n\n    // suck up the pixels RDW\n    fits.imageFromUrl(fits_url);\n\n}\n// called to display header\nfunction showHeader() {\n    fits.showHeader(true);\n}\n\n// called when a contrast slider is moved\nfunction newContrast(event) {\n    // collect both values\n    var name = event.target.id;\n    var number = event.target.id.substring(name.length - 1, name.length);\n    var contrast_value = gebi('contrast_slider_' + number).value;\n\n    // update tracking number\n    var contrast_value_id = gebi(\"contrast_value_\" + number);\n    contrast_value_id.innerHTML = contrast_value;\n\n    // update image\n    fits.setContrast(fits.rois[number], contrast_value / 100.0);\n}\n\n// called when the user makes a stretch selection\nfunction onStretchSel() {\n    fits.setStretch(gebi(\"stretch_sel\").value);\n}\n\n// called when an ROI changes, roi is in image coords.\nfunction onROIChange(roi, redef, moved) {\n    var eid = gebi('roiinfo_' + roi.z);\n    var title = roi.z == 0 ? \"Image\" : \"ROI \" + roi.z;\n    if (eid) {\n        displayStats(eid, \"black\", title, roi);\n    }\n    var dh = gebi(\"roihcanvas_\" + roi.z);\n    if (dh) {\n        fits.displayHistogram(roi, dh);\n    }\n}\n\n// called when user turns an ROI on or off\nfunction onDisplayROI(roi_n) {\n    var cb = gebi(\"display_roi_\" + roi_n);\n    fits.enableROI(roi_n, cb.checked);\n}\n\n// display roi and stats in an orderly manner in given DOM id in given color.\nfunction displayStats(id, color, title, roi) {\n    var stats = roi.stats;\n    var fits_coords = fits.image2FITS(roi);\n    var minat_coords = fits.image2FITS(roi.stats.minat);\n    var maxat_coords = fits.image2FITS(roi.stats.maxat);\n    id.innerHTML =\n        title + \": \" + pad(roi.width, 4) + \" x \" + pad(roi.height, 5) +\n        \" @ [\" + pad(fits_coords.x, 5) + \", \" +\n        pad(fits_coords.y, 5) + \"]<br>\" +\n        \"Min \" + pad(stats.min.toFixed(1), 11) + pad(\"\", 4) +\n        \" @ [\" + pad(minat_coords.x.toFixed(0), 5) + \", \" +\n        pad(minat_coords.y.toFixed(0), 5) + \"]<br>\" +\n        \"Max \" + pad(stats.max.toFixed(1), 11) + pad(\"\", 4) +\n        \" @ [\" + pad(maxat_coords.x.toFixed(0), 5) + \", \" +\n        pad(maxat_coords.y.toFixed(0), 5) + \"]<br>\" +\n        \"Mean \" + pad(stats.mean.toFixed(1), 10) + pad(\"\", 2) +\n        \"StdDev \" + pad(stats.stddev.toFixed(1), 12) + \"<br>\" +\n        \"Median \" + pad(stats.median.toFixed(1), 8) + pad(\"\", 1) +\n        \" Sum \" + pad(stats.sum.toFixed(1), 15);\n    id.style.color = color;\n}\n\n// return s padded on left to n chars\nfunction pad(s, n) {\n    s = s.toString();\n    var nadd = n - s.length;\n    for (var i = 0; i < nadd; i++)\n        s = \"&nbsp;\" + s;\n    return (s);\n}\n","/* FITS \"class\".\n *\n * Version 2016-11-14\n *\n * This is a class to display a FITS files in a web page. The FITS file is loaded from an\n * ArrayBuffer, which can easily be obtained from either local or server based files. Once loaded we\n * can provide resizing, a roaming magnifying glass, a separate magnified window and multiple regions of\n * interest, all optional as desired.\n *\n * We provide no user interface controls, we only draw the image and associated graphics. You must\n * provide a div element in which we create and manage all required canvases as children. You may also \n * specify an optional number of Regions of Interest. If you want to display stats or whatnot, you may\n * also ask us to invoke a callback when the mouse moves or an ROI changes.\n *\n * We create one canvas for the image, one for each ROI and one for the mag glass, in increasing z. If you\n * want access to these (can't think why you would) their ids are \"roi_canvasN\", where N runs from 0 through \n * the number of requested ROIs, and \"glass_canvas\". Note roi_canvas0 is really just an immutable ROI the full\n * size of the image. The canvases are in order of increasing z-index, starting at 1 for the image and\n * ending with the glass at the highest z priotity so it is \"on top\".\n *\n * The location and stats for each ROI are in rois[], with rois[0] being the whole image. The stats within\n * each ROI determine only its own contrast except that the stats in the highest priority roi are also used\n * to determine the contrast for rois[0] (the whole image).\n *\n * Resizing was implemented by repurposing scrollbars.\n *\n * If anything goes wrong we throw a brief descriptive string.\n *\n *\n * Required minimal API:\n *\n *   var fits1 = new FITS (div_id, n_rois)\n *\n *     This call will instantiate a new FITS object within the given div id with the given number of ROIs.\n *     At this point the object does not contain an image (see next). Your typical div markup for a FITS\n *     display looks like this:\n *\n *        <div id=\"fits_div\" \n *           style='position:relative; resize:both; overflow:scroll;\n *             height:400px; width:400px; padding-right:17px; padding-bottom:17px' >\n *        </div>\n *\n *        where:\n *          * width and height are just initial since user may resize; they are also the minimums.\n *          * the padding mutes the scrollbars without effecting the mouse coords returned. The value 17\n *            depends on the browser but seems pretty common.\n *\n *     and the corresponding Javascript code would look like this:\n *\n *        var fits1 = new FITS (document.getElementById (\"fits_div\", 2);\n *\n *\n *   fits1.setNewImage (filename, ArrayBuffer)\n *\n *     install a new FITS file into the given FITS object. This may be done as many times as desired, each\n *     call overwriting the previous image.\n *\n *        filename: just a string used for error messages\n *        ArrayBuffer: the actual file contents, likely from a remote AJAX call or a local file selection.\n *\n *\n * Optional API:\n *\n *   fits1.addMouseHandler(myMouseHandler) \n *     connect the given callback function for mouse moves. callback gets FITS loc{x,y} which can call\n *     getPixelAtFITS(loc) to get image coord.\n *\n *   fits1.addROIChangedHandler(myROIChangedHandler)\n *     connect the given callback function for ROI changes. callback gets three arguments:\n *       - roi{x,y,z,width,height,stats} where stats includes at least {min,max,mean,stddev,sum,sum2,npixels}\n *       - redef which is true iff the callback is being triggered because of a call to redefineROI().\n *       - moved which is true iff the callback is being triggered because the ROI was moved or resized.\n *\n *   fits1.addResizeHandler(myResizeListener)\n *     connect the given callback function for FITS display size changes.\n *\n *   fits1.addGlassCanvas(canvas_id)\n *     connect the given canvas into which we draw a magnified area surrounding the cursor location. If\n *     the user clicks the mouse over the image then subsequently moves the cursor outside the image, the\n *     clicked position is displayed.\n *\n *   fits1.setContrast(fits.rois[i], c)\n *     change contrast of image or ROI, where\n *       i: 0 = image, 1..nrois\n *       c: contrast, 0 <= c <= 1\n *\n *   fits1.setStretch (stretch)\n *     set desired stretch function, where stretch is currently one of \"linear\", \"square\" or \"sqrt\"\n *\n *   fits1.enableROI (roi_n, true_or_false)\n *     enable/disable a ROI given its rois[] index, ignored if out of bounds.\n *\n *   fits1.redefineROI (roi_n, roi_defn)\n *     given a ROI index (1 .. n_rois) move and/or resize the given ROI programmatically to the values in\n *     roi_defn which must contain {x,y,width,height}. Triggers addROIChangedHandler, if any, with redef\n *     and moved true. Throws if new definition is now wholy within the current image.\n *\n *   fits1.showHeader(force)\n *     display FITS header in a separate popup window if force, else only if already up\n *\n *   fits1.header.<key>\n *     access an individual header value, for example fits1.header.NAXIS1\n *\n *\n * The first pixel in a FITS file is to be displayed in the lower left corner. Javascript wants the\n * first pixel of an image to be the upper left corner. To accommodate this, FITS.setNewImage() flips\n * the pixel rows when filling the FITS.image array. Thus, displaying the image array with native Javascript\n * methods will display the pixels correctly. Then regarding pixel coordinates, FITS wants the lower left\n * corner to be [1,1] whereas Javascript wants the upper left to be [0,0]. All coordinates used in this\n * package use the Javascript convention. These may be converted to and from FITS using image2FITS() and\n * FITS2Image(). Note that ROIs will be adjusted so that the visual lower left corner will be the x,y\n * reference location in both coordinate systems.\n */\n\n/* FITS view \"class\".\n * create an instance with new for each desired display area, fine to have more than one per page.\n */\nfunction FITS(div_id, n_rois) {\n\n    // check args\n    if (!div_id || div_id.tagName != \"DIV\") // must be a div\n        throw (\"FITS requires a div\");\n    if (isNaN(parseInt(n_rois))) // default to no ROIs\n        n_rois = 0;\n\n    // add a resize listener (see code at end)\n    var thisfits = this;\n    createResizeListener();\n    addResizeListener(div_id, function() {\n        thisfits.handleResize();\n    });\n\n    // build each ROI, including first one for the image\n    this.rois = new Array(n_rois + 1);\n    // TODO: test for too few colors\n    var roicolors = [\"#bbb\", \"#55f\", \"#393\", \"orange\", \"#1ff\", \"#f1f\", \"#fa1\", \"white\"];\n    for (var i = 0; i <= n_rois; i++) {\n        var roi = {};\n        roi.x = 0; // ul roi x, image coords\n        roi.y = 0; // ul roi y, image coords\n        roi.z = i; // canvas z depth\n        roi.enabled = true; // whether to display\n        roi.width = 10000000; // roi width (start huge to force resize)\n        roi.height = 10000000; // roi height (start huge to force resize)\n        roi.contrast = 0; // display contrast, 0 .. 1\n        roi.color = roicolors[i]; // border color\n        roi.stats = {}; // see computeROIStats()\n        roi.black = undefined; // black pixel, once contrast is defined\n        roi.white = undefined; // white pixel, once contrast is defined\n        roi.cvs = FITS_newCanvas(div_id, \"roi_canvas\" + i, i + 1); // new canvas\n        roi.ctx = roi.cvs.getContext(\"2d\"); // handy canvas 2d context \n        this.rois[i] = roi; // add to array of all ROIs\n    }\n\n    // build the glass layer on top\n    this.gcvs = FITS_newCanvas(div_id, \"glass_canvas\", n_rois + 2); // glass canvas\n    this.gctx = this.gcvs.getContext(\"2d\"); // handy glass 2d context\n\n    // connect our mouse and keyboard handlers\n    window.addEventListener(\"mousemove\", function(event) {\n        FITS_handleMouse(event, thisfits);\n    }, true);\n    window.addEventListener(\"mousedown\", function(event) {\n        FITS_handleMouse(event, thisfits);\n    }, true);\n    window.addEventListener(\"keydown\", function(event) {\n        FITS_handleKeyboard(event, thisfits);\n    }, true);\n    window.addEventListener(\"keyup\", function(event) {\n        FITS_handleKeyboard(event, thisfits);\n    }, true);\n\n    // use highest priority roi for entire image contrast\n    this.icroi = n_rois;\n\n    // init instance variables, most are undefined until an image is set\n    this.div_id = div_id; // canvases container\n    this.image = undefined; // image, flipped in Y and phys values\n    this.filename = undefined; // original FITS file name\n    this.header = {}; // FITS header index by keyword\n    this.rawheader = []; // array of literal header cards\n    this.drew_glass = false; // whether glass is currently visible\n    this.glass_size = 0.05; // glass image fraction (before mag)\n    this.glass_mag = 4; // default glass mag factor\n    this.glass_mic = undefined; // center glass click location\n    this.mic = undefined; // current mouse image coordinates\n    this.width = undefined; // handy image size\n    this.height = undefined; // handy image size\n    this.resize_scale = undefined; // display size / image size\n    this.header_win = undefined; // separate window for header\n    this.stretch = \"linear\"; // default stretch\n\n    // place to record user's callbacks\n    this.userMouseHandler = undefined; // user's mouse event callback\n    this.userROIChangedHandler = undefined; // user's ROI changed callback\n    this.userGlassCanvas = undefined; // user's canvas for drawing glass\n\n    // ROI dragging state\n    this.drag_roi = undefined; // rois[] index currently being dragged\n    this.drag_code = undefined; // which edge, corner or all being dragged\n    this.drag_mvos = {\n        dx: 0,\n        dy: 0\n    }; // clicked move offset from roi center \n    this.cursors = { // map of drag_codes to javacript cursors\n        \"n-resize\": \"ns-resize\",\n        \"s-resize\": \"ns-resize\",\n        \"e-resize\": \"ew-resize\",\n        \"w-resize\": \"ew-resize\",\n        \"ne-resize\": \"nesw-resize\",\n        \"sw-resize\": \"nesw-resize\",\n        \"nw-resize\": \"nwse-resize\",\n        \"se-resize\": \"nwse-resize\",\n        \"move\": \"move\"\n    };\n}\n\n/* get fits from a url, by RDW */\nFITS.prototype.imageFromUrl = function(fits_url) {\n    var xhr = new XMLHttpRequest();\n    xhr.onload = function(e) {\n        var result = xhr.response;\n        if (xhr.status == 200) {\n            fits.setNewImage('fits_file', result);\n            fits.showHeader(false);\n        }\n    };\n\n    xhr.open('GET', fits_url);\n    xhr.responseType = 'arraybuffer';\n    xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\n    xhr.send(null);\n};\n\n/* return a new canvas with z-index z with initial size same as parent.\n */\nfunction FITS_newCanvas(parent, name, z) {\n    var cid = document.createElement(\"canvas\");\n    cid.setAttribute(\"id\", name);\n\n    cid.setAttribute(\"style\", \"position:absolute; z-index:\" + z);\n    cid.setAttribute(\"width\", parseInt(parent.style.width));\n    cid.setAttribute(\"height\", parseInt(parent.style.height));\n    parent.appendChild(cid);\n\n    return (cid);\n}\n\n/* capture the new FITS file from the given ArrayBuffer with the given name into roi[0].\n */\nFITS.prototype.setNewImage = function(filename, fitsab) {\n    // save file name\n    this.filename = filename;\n\n    // init header collections\n    this.header = {};\n    this.rawheader = [];\n\n    // fill header from 80 byte cards blocked in units of 2880 bytes.\n    var hlen = 0;\n\n    try {\n        for (hlen = 0; hlen < fitsab.byteLength; hlen += 80) {\n\n            var card = String.fromCharCode.apply(null, new Uint8Array(fitsab, hlen, 80));\n            if (card.match(/^END */)) { // finished when see END\n                hlen += 80;\n                break;\n            }\n\n            this.rawheader.push(card); // capture the raw card image\n\n            if (card.indexOf(\"=\") < 0) // skip COMMENT, HISTORY etc\n                continue;\n\n            var key = card.substring(0, 8); // key is always the first 8 chars ...\n            key = key.replace(/ *$/, \"\"); // without trailing blanks\n\n            var val = card.substring(10); // value starts in col 11 but ...\n            val = val.replace(/^ */, \"\"); // remove leading blanks\n            val = val.replace(/\\/.*$/, \"\"); // remove comments\n            val = val.replace(/ *$/, \"\"); // remove trailing blanks\n            if (val.indexOf(\"'\") >= 0) // looks like a string\n                val = val.substring(1, val.length - 2);\n            else if (val.indexOf(\"T\") >= 0) // looks like a True boolean\n                val = true;\n            else if (val.indexOf(\"F\") >= 0) // looks like a False boolean\n                val = false;\n            else if (val.indexOf(\".\") >= 0) // looks like a float\n                val = parseFloat(val);\n            else // must be an int\n                val = parseInt(val);\n            this.header[key] = val;\n            // console.log (key + \": #\" + this.header[key] + \"#\");\n        }\n    } catch (e) {\n        throw (this.filename + \": not a FITS file: \" + e);\n    }\n\n    // confirm minimal header\n    if (!(this.header.SIMPLE &&\n            typeof this.header.NAXIS1 == \"number\" &&\n            typeof this.header.NAXIS2 == \"number\" &&\n            typeof this.header.BITPIX == \"number\")) {\n        throw (this.filename + \": not a valid FITS file\");\n    }\n\n    // pixels start on next whole 2880 block\n    if ((hlen % 2880) > 0)\n        hlen += 2880 - (hlen % 2880);\n\n    // save image size\n    // console.log (this.header.NAXIS1 + \" x \" + this.header.NAXIS2 + \" x \" + this.header.BITPIX);\n    this.width = this.rois[0].width = this.header.NAXIS1;\n    this.height = this.rois[0].height = this.header.NAXIS2;\n    var npixels = this.width * this.height;\n    var nbytes = npixels * Math.abs(this.header.BITPIX) / 8;\n    if (fitsab.byteLength < hlen + nbytes)\n        throw (this.filename + \": too short: \" + fitsab.byteLength + \" < \" + (hlen + nbytes));\n    // console.log (npixels + \" pixels in \" + nbytes + \" bytes\");\n\n    // convert remainder of file to an array of physical values, depending on type.\n    // along the way also flip vertically.\n    var bzero = this.header.BZERO || 0;\n    var bscale = this.header.BSCALE || 1;\n    this.image = new Array(npixels);\n    var dv = new DataView(fitsab, hlen, nbytes);\n    if (this.header.BITPIX == 8) {\n        // data is array of unsigned bytes\n        var imgi = 0;\n        for (var y = 0; y < this.height; y++) {\n            var fitsi = (this.height - 1 - y) * this.width;\n            for (var x = 0; x < this.width; x++) {\n                this.image[imgi] = bzero + bscale * dv.getUint8(fitsi);\n                imgi++;\n                fitsi++;\n            }\n        }\n    } else if (this.header.BITPIX == 16) {\n        // data is array of signed words, big endian\n        var imgi = 0;\n        for (var y = 0; y < this.height; y++) {\n            var fitsi = (this.height - 1 - y) * this.width;\n            for (var x = 0; x < this.width; x++) {\n                this.image[imgi] = bzero + bscale * dv.getInt16(fitsi * 2, false);\n                imgi++;\n                fitsi++;\n            }\n        }\n    } else if (this.header.BITPIX == 32) {\n        // data are array of signed double words, big endian\n        var imgi = 0;\n        for (var y = 0; y < this.height; y++) {\n            var fitsi = (this.height - 1 - y) * this.width;\n            for (var x = 0; x < this.width; x++) {\n                this.image[imgi] = bzero + bscale * dv.getInt32(fitsi * 4, false);\n                imgi++;\n                fitsi++;\n            }\n        }\n    } else if (this.header.BITPIX == -32) {\n        // data are array of IEEE single precising floating point, big endian\n        var imgi = 0;\n        for (var y = 0; y < this.height; y++) {\n            var fitsi = (this.height - 1 - y) * this.width;\n            for (var x = 0; x < this.width; x++) {\n                this.image[imgi] = bzero + bscale * dv.getFloat32(fitsi * 4, false);\n                imgi++;\n                fitsi++;\n            }\n        }\n    } else {\n        throw (this.filename + \": BITPIX \" + this.header.BITPIX + \" is not yet supported\");\n    }\n\n    // display by faking a resize event which does everything\n    this.handleResize();\n}\n\n/* called to display the FITS header in its own window.\n * if force is true, we create a new window; if false, we only update the header window if it already\n * exists and is still open.\n */\nFITS.prototype.showHeader = function(force) {\n    // check null cases\n    if (!this.filename || !this.rawheader)\n        return; // no image yet\n    var isup = this.header_win && !this.header_win.closed;\n    if (!isup && !force)\n        return; // not up but don't care\n\n    // create window if it does not exist or last one was closed\n    if (this.header_win == undefined || this.header_win.closed) {\n        this.header_win = window.open(\"\", \"_blank\", \"width=500, height=500, scrollbars=yes\");\n        // build outer html element in document, then updates go inside this\n        this.header_win.document.write(\"<html></html>\");\n    }\n\n    // build text that will go inside html element\n    var text = \"<head><title>\" + this.filename + \" Header</title></head><body><pre>\";\n    for (var i = 0; i < this.rawheader.length; i++)\n        text += this.rawheader[i] + \"<br>\";\n    text += \"</pre></body>\";\n\n    // display\n    this.header_win.document.documentElement.innerHTML = text;\n}\n\n/* compute some image stats at the given ROI.\n * ROI must have x, y, width and height.\n * object returned will have at least properties npixels, min, max, sum, mean, stddev and histo.\n * throw if ROI is not wholly contained with in the image.\n */\nFITS.prototype.computeROIStats = function(roi) {\n    if (!this.image)\n        return;\n\n    // console.log (roi.x + \" \" + roi.y + \" \" + roi.width + \" \" + roi.height);\n    if (roi.x < 0 || roi.width < 0 || roi.x + roi.width > this.width ||\n        roi.y < 0 || roi.height < 0 || roi.y + roi.height > this.height)\n        throw (this.filename + \": roi is outside image [\" + roi.x + \",\" + roi.y + \"], \" +\n            roi.width + \" x \" + roi.height);\n\n    // scan pixels within roi\n    var npixels = roi.width * roi.height;\n    var pxi = roi.y * this.width + roi.x; // start of first row in roi\n    var min = this.image[pxi];\n    var max = min;\n    var maxatx = roi.x,\n        maxaty = roi.y;\n    var minatx = roi.x,\n        minaty = roi.y;\n    var sum = 0;\n    var sum2 = 0;\n    for (var dy = 0; dy < roi.height; dy++) {\n        for (var dx = 0; dx < roi.width; dx++) {\n            var p = this.image[pxi++];\n            if (p < min) {\n                min = p;\n                minatx = dx + roi.x;\n                minaty = dy + roi.y;\n            }\n            if (p > max) {\n                max = p;\n                maxatx = dx + roi.x;\n                maxaty = dy + roi.y;\n            }\n            sum += p;\n            sum2 += p * p;\n        }\n        pxi += (this.width - roi.width); // skip to start of next row\n    }\n    var range = Math.max(1, max - min);\n    var stddev = Math.sqrt(npixels * sum2 - sum * sum) / npixels;\n\n    // init histogram, index N bins as [0..N-1] for pixel values [min..max].\n    // nothing critical about N.\n    var histo = new Array(128);\n    for (var i = 0; i < histo.length; i++)\n        histo[i] = 0;\n\n    // use pixel range to rescan for histogram\n    pxi = roi.y * this.width + roi.x; // start of first row in roi\n    var histomax = 0; // n counts in largest bin\n    for (var dy = 0; dy < roi.height; dy++) {\n        for (var dx = 0; dx < roi.width; dx++) {\n            var p = this.image[pxi++];\n            var bin = Math.floor((histo.length - 1) * (p - min) / range);\n            if (++histo[bin] > histomax)\n                histomax = histo[bin];\n        }\n        pxi += (this.width - roi.width); // skip to start of next row\n    }\n\n    // find median: pixel at which half are below and half above\n    var histi = 0;\n    for (var count = 0; count < npixels / 2; histi++)\n        count += histo[histi];\n    var median = Math.floor(min + range * histi / histo.length);\n    // console.log ('median = ' + median);\n\n    // return the stats report\n    return {\n        npixels: npixels, // n pixels in this roi\n        min: min, // smallest pixel in this roi\n        minat: {\n            x: minatx, // location of smallest pixel\n            y: minaty\n        },\n        max: max, // largest pixel in this roi\n        maxat: {\n            x: maxatx, // location of largest pixel\n            y: maxaty\n        },\n        range: range, // large of 1 and (max - min)\n        sum: sum, // sum of all pixels in this roi\n        mean: sum / npixels, // average of all pixels in this roi\n        median: median, // median of all pixels in this roi\n        stddev: stddev, // stddev of all pixels in this roi\n        histo: histo, // histogram, count of min .. max in length bins\n        histomax: histomax, // greatest count in histo, used for scaling\n    };\n}\n\n/* set contrast from 0 .. 1 on the given roi then redraw.\n */\nFITS.prototype.setContrast = function(roi, contrast) {\n    if (!this.image)\n        return;\n    if (contrast < 0 || contrast > 1)\n        throw (\"setContrast \" + contrast + \" must be 0 .. 1\");\n    roi.contrast = Math.sqrt(contrast); // more control near high contrast\n    this.renderROI(roi, false, false);\n}\n\n/* return black white pixel values given contrast and stats.\n */\nFITS.prototype.findBlackAndWhite = function(contrast, stats) {\n    if (!stats)\n        return;\n\n    // handy\n    var histo = stats.histo;\n    var black, white;\n\n    // pick one\n    if (true) {\n\n        // stddev method\n\n        black = Math.max(stats.min, stats.mean - 6 * stats.stddev * (1 - contrast));\n        white = Math.min(stats.max, stats.mean + 6 * stats.stddev * (1 - contrast));\n\n    } else if (false) {\n\n        // median spread method sans outer 1%\n\n        var NFRACP = stats.npixels / 50;\n        var nhisto = histo.length - 1;\n        var blacki = 0,\n            whitei = nhisto;\n        for (var sum = 0; blacki < nhisto && sum < NFRACP; blacki++)\n            sum += histo[blacki];\n        for (var sum = 0; whitei >= 0 && sum < NFRACP; --whitei)\n            sum += histo[whitei];\n\n        var minpix = stats.min + blacki * stats.range / nhisto;\n        var maxpix = stats.min + whitei * stats.range / nhisto;\n\n        black = stats.median - (stats.median - minpix) * (1 - contrast);\n        white = stats.median + (maxpix - stats.median) * (1 - contrast);\n\n    } else if (false) {\n\n        // spread equal fraction about the median to each end\n\n        black = stats.median - (stats.median - stats.min) * (1 - contrast);\n        white = stats.median + (stats.max - stats.median) * (1 - contrast);\n\n        // console.log(stats.min + ' .. ' + stats.median + ' .. ' + stats.max + ' : ' + black + ' .. ' + white);\n\n    } else if (false) {\n\n        // spread equally about the median by smaller of distance to each end\n\n        var spread = Math.min(stats.max - stats.median, stats.median - stats.min);\n        black = stats.median - spread * (1 - contrast);\n        white = stats.median + spread * (1 - contrast);\n\n    } else {\n\n        // contrast is based on displaying some fraction of total pixels about the median\n\n        var median_i = Math.floor(histo.length * (stats.median - stats.min) / stats.range);\n        var contrast_count = stats.npixels * (1 - contrast);\n\n        var black_i = Math.max(median_i - 1, 0);\n        var white_i = Math.min(median_i + 1, histo.length - 1);\n        for (var count = histo[median_i]; count < contrast_count;) {\n            count += histo[black_i];\n            count += histo[white_i];\n            black_i = Math.max(black_i - 1, 0);\n            white_i = Math.min(white_i + 1, histo.length - 1);\n        }\n\n        black = stats.min + stats.range * black_i / histo.length;\n        white = stats.min + stats.range * white_i / histo.length;\n    }\n\n    // insure constant has some depth\n    // if (black >= white)\n    // black = white - 1;\n\n    return {\n        black: black,\n        white: white\n    };\n\n}\n\n// called when user resizes the div containing the canvases\nFITS.prototype.handleResize = function() {\n    if (!this.image)\n        return;\n\n    // get current physical size of div, accommodate possible units suffix\n    var divw = parseInt(this.div_id.style.width);\n    var divh = parseInt(this.div_id.style.height);\n\n    // resize each canvas to match the div, glass too\n    for (var i = 0; i < this.rois.length; i++) {\n        this.rois[i].cvs.setAttribute(\"width\", divw);\n        this.rois[i].cvs.setAttribute(\"height\", divh);\n    }\n    this.gcvs.setAttribute(\"width\", divw);\n    this.gcvs.setAttribute(\"height\", divh);\n\n    // establish size of canvas compared to size of image, maintaining aspect ratio\n    if (divw / divh > this.width / this.height) {\n        // full height\n        this.resize_scale = divh / this.height;\n    } else {\n        // full width\n        this.resize_scale = divw / this.width;\n    }\n\n    // set each roi scale so we can always work in image coords, glass too\n    for (var i = 0; i < this.rois.length; i++) {\n        this.rois[i].ctx.setTransform(1, 0, 0, 1, 0, 0);\n        this.rois[i].ctx.translate(0.5, 0.5); // crisper lines and pixels\n        this.rois[i].ctx.scale(this.resize_scale, this.resize_scale);\n    }\n    this.gctx.setTransform(1, 0, 0, 1, 0, 0);\n    this.gctx.translate(0.5, 0.5); // crisper lines and pixels\n    this.gctx.scale(this.resize_scale, this.resize_scale);\n\n    // now render everything at this size\n    this.renderAll();\n}\n\n// (re)render everything, be prepared to adjust ROIs and glass sizes\nFITS.prototype.renderAll = function() {\n    // update all ROIS first so rois[0] can use stats in rois[icroi] for contrast\n    var nrois = this.rois.length;\n    var moved = false;\n    for (var i = 0; i < nrois; i++) {\n        var roi = this.rois[i];\n\n        // adjust ROI back to a default location inside if it is now outside the image size\n        if (roi.x + roi.width > this.width || roi.y + roi.height > this.height ||\n            (roi.width * this.resize_scale < 20 && roi.height * this.resize_scale < 20)) {\n            roi.x = Math.floor(3 * ((nrois - i) % nrois) * this.width / 20); // left->right decreasing z\n            roi.y = Math.floor(this.height / 20);\n            roi.width = Math.floor(this.width / 10);\n            roi.height = Math.floor(this.height / 10);\n            moved = true;\n        }\n    }\n\n    // now render all rois\n    for (var i = 0; i < this.rois.length; i++)\n        this.renderROI(this.rois[i], false, moved);\n}\n\n// allow user to set desired stretch function\nFITS.prototype.setStretch = function(s) {\n    this.stretch = s;\n    this.renderAll();\n}\n\n// allow user to enable/disable a given roi\nFITS.prototype.enableROI = function(roi_n, enable) {\n    if (roi_n < 1 || roi_n >= this.rois.length)\n        throw ('enableROI(' + roi_n + ') must be 1 .. ' + (this.rois.length - 1));\n\n    var roi = this.rois[roi_n];\n    roi.enabled = enable;\n    this.renderROI(roi, false, false);\n}\n\n/* redefine the given ROI.\n * throw if not wholy within the current image.\n */\nFITS.prototype.redefineROI = function(roi_n, roi_defn) {\n    // validate roi_n\n    if (roi_n < 1 || roi_n >= this.rois.length)\n        throw ('redefineROI(' + roi_n + ') must be 1 .. ' + (this.rois.length - 1));\n\n    // validate roi_defn\n    if (roi_defn.x < 0 || roi_defn.x + roi_defn.width > this.width ||\n        roi_defn.y < 0 || roi_defn.y + roi_defn.height > this.height)\n        throw ('redefineROI [' + roi_defn.x + ',' + roi_defn.y + ';' + roi_defn.width + 'x' + roi_defn.height +\n            '] not inside image [' + this.width + 'x' + this.height + ']');\n\n    var roi = this.rois[roi_n];\n\n    // install new definition\n    roi.x = roi_defn.x;\n    roi.y = roi_defn.y;\n    roi.width = roi_defn.width;\n    roi.height = roi_defn.height;\n\n    // console.log ('redefineROI to ['+ roi.x + ',' + roi.y + ';' + roi.width + 'x' + roi.height + ']');\n\n    // redraw and indicate this is a move\n    this.renderROI(roi, true, true);\n\n    // also redisplay image if we moved rois[this.icroi]\n    if (this.rois.length > 1 && roi == this.rois[this.icroi])\n        this.renderROI(this.rois[0], false, false);\n}\n\n/* render the given ROI and invoke userROIChangedHandler, if any, with redef\n */\nFITS.prototype.renderROI = function(roi, redef, moved) {\n    // harmless if no image yet\n    if (!this.image)\n        return;\n\n    // compute our stats\n    roi.stats = this.computeROIStats(roi);\n\n    // find black and white.\n    var bw = this.findBlackAndWhite(roi.contrast, roi.stats);\n    var black = roi.black = bw.black;\n    var white = roi.white = bw.white;\n\n    // N.B.: whole image in rois[0] uses stats from rois[icroi]\n    if (roi == this.rois[0] && this.rois.length > 1 && this.rois[this.icroi].enabled) {\n        var icroi_stats = this.computeROIStats(this.rois[this.icroi]);\n        var bw = this.findBlackAndWhite(roi.contrast, icroi_stats);\n        black = bw.black;\n        white = bw.white;\n    }\n\n    // handy\n    var ctx = roi.ctx;\n    var range = Math.max(1, white - black);\n\n    // set up stretch option\n    var stretch_f;\n    if (this.stretch == \"linear\") {\n        stretch_f = function(pixel) {\n            return (255 * (pixel - black) / range);\n        }\n    } else if (this.stretch == \"square\") {\n        stretch_f = function(pixel) {\n            var v = (pixel - black) / range;\n            return (255 * v * v);\n        }\n    } else if (this.stretch == \"sqrt\") {\n        stretch_f = function(pixel) {\n            return (255 * Math.sqrt((pixel - black) / range));\n        }\n    } else {\n        throw (\"Unknown stetch: \" + this.stretch + \", choices are linear, square and sqrt\");\n    }\n\n    // render as gray scale from black to white, or all transparent if disabled\n    if (roi.enabled) {\n        var roiimage = new ImageData(roi.width, roi.height);\n        var roidata = roiimage.data; // detach from DOM for potentially faster access?\n        var datai = 0; // RGBA tuple index\n        //    for (var y = roi.y; y < roi.y + roi.height; y++) {\n        for (var y = roi.y + roi.height - 1; y >= roi.y; y--) {\n            for (var x = roi.x; x < roi.x + roi.width; x++) {\n                var p = this.image[y * this.width + x];\n                var gray = stretch_f(p);\n                roidata[4 * datai] = gray; // red\n                roidata[4 * datai + 1] = gray; // green\n                roidata[4 * datai + 2] = gray; // blue\n                roidata[4 * datai + 3] = 255; // alpha\n                datai++;\n            }\n        }\n        // roiimage.data = roidata; // reattach\n\n        // display it, must go through a temp canvas in order to use drawImage\n        var tempcan = document.createElement(\"canvas\");\n        tempcan.width = roi.width;\n        tempcan.height = roi.height;\n        var tcctx = tempcan.getContext(\"2d\");\n        tcctx.putImageData(roiimage, 0, 0);\n        this.clearLayer(ctx);\n        noSmoothing(ctx);\n        ctx.drawImage(tempcan, roi.x, roi.y); // resizes according to ctx\n\n        // garbage collector will clean up tempcvs because it has no parent but give it a kick anyway\n        tempcan = undefined;\n\n        // add outline\n        ctx.strokeStyle = roi.color;\n        ctx.lineWidth = 2;\n        ctx.beginPath();\n        ctx.moveTo(roi.x, roi.y);\n        ctx.lineTo(roi.x + roi.width, roi.y);\n        ctx.lineTo(roi.x + roi.width, roi.y + roi.height);\n        ctx.lineTo(roi.x, roi.y + roi.height);\n        ctx.lineTo(roi.x, roi.y);\n        ctx.lineTo(roi.x + roi.width, roi.y); // fill corner if highly magnified\n        ctx.stroke();\n    } else {\n        this.clearLayer(ctx);\n    }\n\n    // inform user if interested\n    if (this.userROIChangedHandler != undefined)\n        this.userROIChangedHandler(roi, redef, moved);\n}\n\n/* given image coords of glass center, draw a magnified portion on the glass canvas\n */\nFITS.prototype.renderGlass = function(image_loc) {\n    // harmless if called without a glass canvas or before image is loaded\n    if (!image_loc || !this.gcvs || !this.image)\n        return;\n\n    // check for edges\n\n    var glassimgsz = this.glass_size * this.width;\n    var glasssz = glassimgsz * this.glass_mag;\n    var ulglassx, ulglassy, glassw, glassh, imw, imh;\n    var x = image_loc.x;\n    var y = image_loc.y;\n\n    if (x < 0 || x >= this.width)\n        return;\n    if (x < glasssz / 2) {\n        ulglassx = 0;\n        glassw = 2 * x;\n        imw = glassw / this.glass_mag;\n    } else if (x > this.width - glasssz / 2) {\n        glassw = 2 * (this.width - x);\n        ulglassx = this.width - glassw;\n        imw = glassw / this.glass_mag;\n    } else {\n        ulglassx = x - glasssz / 2;\n        glassw = glasssz;\n        imw = glassimgsz;\n    }\n\n    if (y < 0 || y >= this.height)\n        return;\n    if (y < glasssz / 2) {\n        ulglassy = 0;\n        glassh = 2 * y;\n        imh = glassh / this.glass_mag;\n    } else if (y > this.height - glasssz / 2) {\n        glassh = 2 * (this.height - y);\n        ulglassy = this.height - glassh;\n        imh = glassh / this.glass_mag;\n    } else {\n        ulglassy = y - glasssz / 2;\n        glassh = glasssz;\n        imh = glassimgsz;\n    }\n\n    // draw glass in canvas from image layer with magnified size\n    noSmoothing(this.gctx);\n    this.gctx.drawImage(this.rois[0].cvs, // source canvas\n        (x - imw / 2) * this.resize_scale + 1, (y - imh / 2) * this.resize_scale + 1, // source x, y\n        imw * this.resize_scale, imh * this.resize_scale, // source w, h\n        ulglassx, ulglassy, // dest (gid_ctx) x, y\n        glassw, glassh); // dest w, h\n\n    // add a nice border\n    this.gctx.strokeStyle = \"yellow\";\n    this.gctx.beginPath();\n    this.gctx.moveTo(ulglassx, ulglassy);\n    this.gctx.lineTo(ulglassx + glassw, ulglassy);\n    this.gctx.lineTo(ulglassx + glassw, ulglassy + glassh);\n    this.gctx.lineTo(ulglassx, ulglassy + glassh);\n    this.gctx.lineTo(ulglassx, ulglassy);\n    this.gctx.stroke();\n}\n\n/* convert image to FITS coords.\n * if the given object contains at least {x, y, height} then return a copy of the object with x and y\n *   converted to FITS coordinates, including arranging for new reference corner to be visually in the\n *   lower left corner, ie, at smallest numeric location.\n * if the given object contains x and y but not height, then return a copy of the object with just x\n *   and y converted to FITS coords without regard to a reference position.\n * N.B. we do no bounds checking\n */\nFITS.prototype.image2FITS = function(imageloc) {\n    // skip if no image yet\n    if (!this.height || !imageloc)\n        return;\n\n    var fitsloc = (JSON.parse(JSON.stringify(imageloc)));\n    fitsloc.x = imageloc.x + 1;\n    fitsloc.y = this.height - imageloc.y;\n    if (imageloc.height)\n        fitsloc.y -= (imageloc.height - 1); // exclusive\n    return (fitsloc);\n}\n\n/* convert FITS to image coords.\n * if the given object contains at least {x, y, height} then return a copy of the object with x and y\n *   converted to image coordinates, including arranging for new reference corner to be visually in the\n *   lower left corner, ie, at smallest numeric location.\n * if the given object contains x and y but not height, then return a copy of the object with just x\n *   and y converted to FITS coords without regard to a reference position.\n * N.B. we do no bounds checking\n */\nFITS.prototype.FITS2Image = function(fitsloc) {\n    // skip if no image yet\n    if (!this.height || !fitsloc)\n        return;\n\n    var imageloc = (JSON.parse(JSON.stringify(fitsloc)));\n    imageloc.x = fitsloc.x - 1;\n    imageloc.y = this.height - fitsloc.y;\n    if (fitsloc.height)\n        imageloc.y -= (fitsloc.height - 1); // exclusive\n    return (imageloc);\n}\n\n/* convert screen coords in a javascript event to image coords\n */\nFITS.prototype.event2image = function(event) {\n    var imgcoords = {};\n\n    // get raw coords, depending on browser\n    if (event.pageX) {\n        imgcoords.x = event.pageX;\n        imgcoords.y = event.pageY;\n    } else {\n        imgcoords.x = event.clientX;\n        imgcoords.y = event.clientY;\n    }\n\n    // account for browser window scrolling (not the div scrolling)\n    var iid_rect = this.rois[0].cvs.getBoundingClientRect();\n    imgcoords.x -= (window.pageXOffset + iid_rect.left);\n    imgcoords.y -= (window.pageYOffset + iid_rect.top);\n\n    // now account for user resizing and drop to nearest whole pixel\n    imgcoords.x = Math.floor(imgcoords.x / this.resize_scale);\n    imgcoords.y = Math.floor(imgcoords.y / this.resize_scale);\n\n    return (imgcoords);\n}\n\n/* function user can call to register a function we call whenever the mouse moves over the image,\n *   or cancel same if undefined.\n * if we do call handler, first argument will be a object containing x and y in FITS coords, second will be\n *   value of pixel at that location.\n */\nFITS.prototype.addMouseHandler = function(handler) {\n    this.userMouseHandler = handler;\n}\n\n/* function user can call to register a function we call whenever an ROI changes location or shape,\n *   or cancel same if undefined.\n * if we do call handler, argument will be an object with ROI details.\n */\nFITS.prototype.addROIChangedHandler = function(handler) {\n    this.userROIChangedHandler = handler;\n}\n\n/* function user can call to register a function we call whenever the FITS canvases are resized\n */\nFITS.prototype.addResizeHandler = function(handler) {\n    addResizeListener(this.div_id, handler);\n}\n\n/* function user can call to register a canvas on which we draw a magnified region centered under \n *   the cursor, or undefined to cancal this feature.\n */\nFITS.prototype.addGlassCanvas = function(canvas_id) {\n    this.userGlassCanvas = canvas_id;\n}\n\n/* given an image location, set this.drag_roi and this.drag_code, if any.\n * don't worry too much about resolving ambiguities if some ROIs overlap.\n */\nFITS.prototype.findROI = function(image_loc) {\n    var stol = 4; // tolerance, in screen pixels\n    var tolerance = stol / this.resize_scale; // tolerance, in image pixels\n\n    this.drag_roi = undefined;\n    this.drag_code = undefined;\n\n    // don't include the basic image in ROI 0\n    for (var i = 1; this.drag_code == undefined && i < this.rois.length; i++) {\n        var roi = this.rois[i];\n\n        var near = roi.enabled &&\n            image_loc.x > roi.x - tolerance && image_loc.x < roi.x + roi.width + tolerance &&\n            image_loc.y > roi.y - tolerance && image_loc.y < roi.y + roi.height + tolerance\n\n        if (near) {\n\n            var on_top_edge = image_loc.y < roi.y + tolerance;\n\n            var want_move = on_top_edge && Math.abs(image_loc.x - (roi.x + roi.width / 2)) < roi.width / 6;\n\n            if (want_move)\n                this.drag_code = \"move\";\n            else {\n                var on_left_edge = image_loc.x < roi.x + tolerance;\n                var on_right_edge = image_loc.x > roi.x + roi.width - tolerance;\n                var on_bottom_edge = image_loc.y > roi.y + roi.height - tolerance;\n                if (on_left_edge) {\n                    if (on_top_edge)\n                        this.drag_code = \"nw-resize\";\n                    else if (on_bottom_edge)\n                        this.drag_code = \"sw-resize\";\n                    else\n                        this.drag_code = \"w-resize\";\n                } else if (on_right_edge) {\n                    if (on_top_edge)\n                        this.drag_code = \"ne-resize\";\n                    else if (on_bottom_edge)\n                        this.drag_code = \"se-resize\";\n                    else\n                        this.drag_code = \"e-resize\";\n                } else if (on_top_edge) {\n                    if (on_left_edge)\n                        this.drag_code = \"nw-resize\";\n                    else if (on_right_edge)\n                        this.drag_code = \"ne-resize\";\n                    else\n                        this.drag_code = \"n-resize\";\n                } else if (on_bottom_edge) {\n                    if (on_left_edge)\n                        this.drag_code = \"sw-resize\";\n                    else if (on_right_edge)\n                        this.drag_code = \"se-resize\";\n                    else\n                        this.drag_code = \"s-resize\";\n                }\n            }\n\n            if (this.drag_code != undefined)\n                this.drag_roi = i;\n        }\n    }\n}\n\n/* update the position of the drag_roi to the given image loc\n */\nFITS.prototype.moveROI = function(image_loc) {\n    var roi = this.rois[this.drag_roi];\n    var new_code = undefined;\n\n    if (this.drag_code == \"move\") {\n        // draw ROI centered at image_loc\n        // beware fractional x or y when roi width is odd\n        roi.x = Math.min(Math.max(0, image_loc.x + this.drag_mvos.dx - Math.round(roi.width / 2 + 0.5)),\n            this.width - roi.width);\n        roi.y = Math.min(Math.max(0, image_loc.y + this.drag_mvos.dy - Math.round(roi.height / 2 + 0.5)),\n            this.height - roi.height);\n\n    } else if (this.drag_code == \"n-resize\") {\n        var dy = image_loc.y - roi.y;\n        roi.y += dy;\n        roi.height -= dy;\n        if (roi.height < 0)\n            new_code = 's-resize';\n\n    } else if (this.drag_code == \"s-resize\") {\n        roi.height += image_loc.y - (roi.y + roi.height);\n        if (roi.height < 0)\n            new_code = 'n-resize';\n\n    } else if (this.drag_code == \"e-resize\") {\n        roi.width += image_loc.x - (roi.x + roi.width);\n        if (roi.width < 0)\n            new_code = 'w-resize';\n\n    } else if (this.drag_code == \"w-resize\") {\n        var dx = image_loc.x - roi.x;\n        roi.x += dx;\n        roi.width -= dx;\n        if (roi.width < 0)\n            new_code = 'e-resize';\n\n    } else if (this.drag_code == \"ne-resize\") {\n        roi.width += image_loc.x - (roi.x + roi.width);\n        var dy = image_loc.y - roi.y;\n        roi.y += dy;\n        roi.height -= dy;\n        if (roi.width < 0 && roi.height < 0)\n            new_code = 'sw-resize';\n        else if (roi.width < 0)\n            new_code = 'nw-resize';\n        else if (roi.height < 0)\n            new_code = 'se-resize';\n\n    } else if (this.drag_code == \"se-resize\") {\n        roi.width += image_loc.x - (roi.x + roi.width);\n        roi.height += image_loc.y - (roi.y + roi.height);\n        if (roi.width < 0 && roi.height < 0)\n            new_code = 'nw-resize';\n        else if (roi.width < 0)\n            new_code = 'sw-resize';\n        else if (roi.height < 0)\n            new_code = 'ne-resize';\n\n    } else if (this.drag_code == \"nw-resize\") {\n        var dy = image_loc.y - roi.y;\n        roi.y += dy;\n        roi.height -= dy;\n        var dx = image_loc.x - roi.x;\n        roi.x += dx;\n        roi.width -= dx;\n        if (roi.width < 0 && roi.height < 0)\n            new_code = 'se-resize';\n        else if (roi.width < 0)\n            new_code = 'ne-resize';\n        else if (roi.height < 0)\n            new_code = 'sw-resize';\n\n    } else if (this.drag_code == \"sw-resize\") {\n        var dx = image_loc.x - roi.x;\n        roi.x += dx;\n        roi.width -= dx;\n        roi.height += image_loc.y - (roi.y + roi.height);\n        if (roi.width < 0 && roi.height < 0)\n            new_code = 'ne-resize';\n        else if (roi.width < 0)\n            new_code = 'se-resize';\n        else if (roi.height < 0)\n            new_code = 'nw-resize';\n    }\n\n    if (new_code != undefined) {\n        if (roi.width < 0 && roi.height < 0) {\n            roi.x += roi.width;\n            roi.width = -roi.width;\n            roi.y += roi.height;\n            roi.height = -roi.height;\n            this.drag_code = new_code;\n        } else if (roi.width < 0) {\n            roi.x += roi.width;\n            roi.width = -roi.width;\n            this.drag_code = new_code;\n        } else if (roi.height < 0) {\n            roi.y += roi.height;\n            roi.height = -roi.height;\n            this.drag_code = new_code;\n        }\n    }\n\n    // avoid 0 size\n    if (roi.width == 0)\n        roi.width = 1;\n    if (roi.height == 0)\n        roi.height = 1;\n\n    // display\n    this.renderROI(roi, false, true);\n\n    // also redisplay image if we moved rois[this.icroi]\n    if (this.rois.length > 1 && roi == this.rois[this.icroi])\n        this.renderROI(this.rois[0], false, false);\n}\n\n/* clear the given canvas context\n */\nFITS.prototype.clearLayer = function(ctx) {\n    // ctx is already scaled to accept image coords\n    ctx.clearRect(0, 0, this.width, this.height);\n}\n\n/* our keyboard handler, much like a regular listener but includes the context FITS object in\n *   addition to the usual javascript event.\n * basically just record state changes for mag glass etc.\n * nice tutortial: http://javascript.info/tutorial/keyboard-events\n */\nfunction FITS_handleKeyboard(e, thisfits) {\n    e = e || event;\n\n    thisfits.showGlass = e.shiftKey;\n    //    thisfits.updateGlass ();\n}\n\n/* our real mousemove handler, much like a regular listener but includes the context FITS object in\n *   addition to the usual javascript event.\n * handles the glass and ROIs, if any, and calls user's callbacks, if any\n */\nfunction FITS_handleMouse(event, thisfits) {\n    // ignore until image is defined\n    if (!thisfits.image)\n        return;\n\n    // get image coords of mouse\n    var mic = thisfits.event2image(event);\n\n    // check whether over image\n    var over = (mic.x >= 0 && mic.x < thisfits.width &&\n        mic.y >= 0 && mic.y < thisfits.height);\n\n    // if not over, just render glass and update mouse loc at last known location\n    if (!over) {\n        if (thisfits.glass_mic) {\n            thisfits.mic = thisfits.glass_mic;\n            //        thisfits.updateGlass ();\n        }\n        // call user mouse moved callback, if any  TODO??\n        // if (thisfits.userMouseHandler != undefined)\n        // thisfits.userMouseHandler (thisfits.mic);\n        return;\n    }\n\n    // record as current valid location\n    thisfits.mic = mic;\n\n    // update glass, if any\n    //    thisfits.updateGlass ();\n}\n\n/* function user can call to get value of pixel at any FITS coordinate.\n * we return 0 if location is undefined or not valid\n */\nFITS.prototype.getPixelAtFITS = function(fitsloc) {\n    if (fitsloc == undefined)\n        return 0;\n    var imageloc = this.FITS2Image(fitsloc);\n    if (imageloc.x >= 0 && imageloc.x < this.width && imageloc.y >= 0 && imageloc.y < this.height)\n        return this.image[imageloc.y * this.width + imageloc.x];\n    else\n        return 0;\n}\n\n/* given an ROI and a canvas ID, display a histogram of the image pixels.\n * TODO: add tick marks\n */\nFITS.prototype.displayHistogram = function(roi, canvas_id) {\n    // handy\n    var ctx = canvas_id.getContext(\"2d\");\n    var graphw = canvas_id.width;\n    var graphh = canvas_id.height;\n    var stats = roi.stats;\n    var histo = stats.histo;\n    var lhmax = Math.log(stats.histomax);\n\n    // crisper without smoothing and coords centered on display pixels\n    noSmoothing(ctx);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.translate(0.5, 0.5);\n\n    // background\n    ctx.fillStyle = '#888';\n    ctx.fillRect(0, 0, graphw, graphh);\n\n    // draw histogram, depending on sparse or rich\n    if (graphw > histo.length) {\n        // connect shape across histogram\n        ctx.fillStyle = roi.color;\n        ctx.beginPath();\n        ctx.moveTo(0, graphh - 1);\n        for (var hx = 0; hx < histo.length; hx++) {\n            var x = Math.floor(graphw * hx / histo.length);\n            var y = (histo[hx] > 1) ? Math.floor(graphh * (1.0 - Math.log(histo[hx]) / lhmax)) : graphh - 1;\n            ctx.lineTo(x, y);\n        }\n        ctx.lineTo(graphw, graphh - 1);\n        ctx.lineTo(0, graphh - 1);\n        ctx.fill();\n    } else {\n        // draw every x\n        ctx.fillStyle = roi.color;\n        ctx.beginPath();\n        ctx.moveTo(0, graphh - 1);\n        for (var x = 0; x < graphw; x++) {\n            var hx = Math.floor(x * histo.length / graphw);\n            var y = (histo[hx] > 1) ? Math.floor(graphh * (1.0 - Math.log(histo[hx]) / lhmax)) : graphh - 1;\n            ctx.lineTo(x, y);\n        }\n        ctx.lineTo(graphw, graphh - 1);\n        ctx.lineTo(0, graphh - 1);\n        ctx.fill();\n    }\n\n    // draw border\n    ctx.strokeStyle = \"black\";\n    ctx.beginPath();\n    ctx.moveTo(0, 0);\n    ctx.lineTo(0, graphh);\n    ctx.lineTo(graphw, graphh);\n    ctx.lineTo(graphw, 0);\n    ctx.lineTo(0, 0);\n    ctx.stroke();\n\n    // mark the contrast limits\n\n    ctx.strokeStyle = \"#aa44aa\"; // \"median\" and \"magenta\" start with m\n    ctx.beginPath();\n    var medianx = Math.floor((graphw - 1) * (stats.median - stats.min) / stats.range);\n    ctx.moveTo(medianx, 0);\n    ctx.lineTo(medianx, graphh - 1);\n    ctx.stroke();\n\n    ctx.strokeStyle = \"#44aa44\"; // \"green\" rhythms with \"mean\"\n    ctx.beginPath();\n    var meanx = Math.floor((graphw - 1) * (stats.mean - stats.min) / stats.range);\n    ctx.moveTo(meanx, 0);\n    ctx.lineTo(meanx, graphh - 1);\n    ctx.stroke();\n\n    ctx.strokeStyle = \"black\";\n    ctx.beginPath();\n    var blackx = Math.floor((graphw - 1) * (roi.black - stats.min) / stats.range);\n    ctx.moveTo(blackx, 0);\n    ctx.lineTo(blackx, graphh - 1);\n    ctx.stroke();\n\n    ctx.strokeStyle = \"white\";\n    ctx.beginPath();\n    var whitex = Math.floor((graphw - 1) * (roi.white - stats.min) / stats.range);\n    ctx.moveTo(whitex, 0);\n    ctx.lineTo(whitex, graphh - 1);\n    ctx.stroke();\n\n    // console.log('x: ' + blackx + ' .. ' + whitex + ' about ' + medianx);\n    // console.log('p: ' + roi.black + ' .. ' + roi.white + ' about ' + stats.median);\n}\n\n/* disable image smoothing on the given canvas conext.\n * still experimental\n */\nfunction noSmoothing(ctx) {\n    ctx.imageSmoothingEnabled = false;\n    ctx.mozImageSmoothingEnabled = false;\n\n}\n\n/* The following wonderous bit of magic is from\n *   http://www.backalleycoder.com/2013/03/18/cross-browser-event-based-element-resize-detection\n * It creates the document function addResizeListener that connects a callback called whenever an element\n * is resized. It's unfortunate such as basic facility was not already provided.\n */\nfunction createResizeListener() {\n    var attachEvent = document.attachEvent;\n    var isIE = navigator.userAgent.match(/Trident/);\n    var requestFrame = (function() {\n        var raf = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame ||\n            function(fn) {\n                return window.setTimeout(fn, 20);\n            };\n        return function(fn) {\n            return raf(fn);\n        };\n    })();\n\n    var cancelFrame = (function() {\n        var cancel = window.cancelAnimationFrame || window.mozCancelAnimationFrame || window.webkitCancelAnimationFrame ||\n            window.clearTimeout;\n        return function(id) {\n            return cancel(id);\n        };\n    })();\n\n    function resizeListener(e) {\n        var win = e.target || e.srcElement;\n        if (win.__resizeRAF__) cancelFrame(win.__resizeRAF__);\n        win.__resizeRAF__ = requestFrame(function() {\n            var trigger = win.__resizeTrigger__;\n            trigger.__resizeListeners__.forEach(function(fn) {\n                fn.call(trigger, e);\n            });\n        });\n    }\n\n    function objectLoad(e) {\n        this.contentDocument.defaultView.__resizeTrigger__ = this.__resizeElement__;\n        this.contentDocument.defaultView.addEventListener('resize', resizeListener);\n    }\n\n    window.addResizeListener = function(element, fn) {\n        if (!element.__resizeListeners__) {\n            element.__resizeListeners__ = [];\n            if (attachEvent) {\n                element.__resizeTrigger__ = element;\n                element.attachEvent('onresize', resizeListener);\n            } else {\n                if (getComputedStyle(element).position == 'static') element.style.position = 'relative';\n                var obj = element.__resizeTrigger__ = document.createElement('object');\n                obj.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n                obj.__resizeElement__ = element;\n                obj.onload = objectLoad;\n                obj.type = 'text/html';\n                if (isIE) element.appendChild(obj);\n                obj.data = 'about:blank';\n                if (!isIE) element.appendChild(obj);\n            }\n        }\n        element.__resizeListeners__.push(fn);\n    };\n\n    window.removeResizeListener = function(element, fn) {\n        element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n        if (!element.__resizeListeners__.length) {\n            if (attachEvent) element.detachEvent('onresize', resizeListener);\n            else {\n                element.__resizeTrigger__.contentDocument.defaultView.removeEventListener('resize', resizeListener);\n                element.__resizeTrigger__ = !element.removeChild(element.__resizeTrigger__);\n            }\n        }\n    }\n}\n","function copy(text, target) {\n    setTimeout(function() {\n        $('.tooltip').fadeOut('slow');\n    }, 500);\n    var input = document.createElement('input');\n    input.setAttribute('value', text);\n    document.body.appendChild(input);\n    input.select();\n    var result = document.execCommand('copy');\n    document.body.removeChild(input)\n    return result;\n}\n","document.addEventListener('DOMContentLoaded', function() {\n\n    const myDefaultAllowList = bootstrap.Popover.Default.allowList;\n\n    myDefaultAllowList.table = [];\n    myDefaultAllowList.tr = [];\n    myDefaultAllowList.td = ['data-bs-option'];\n    myDefaultAllowList.th = [];\n    myDefaultAllowList.div = [];\n    myDefaultAllowList.tbody = [];\n    myDefaultAllowList.thead = [];\n\n    $('[data-bs-toggle=\"popover\"]').popover();\n\n    var ttDefaultAllowList = bootstrap.Tooltip.Default.allowList;\n    ttDefaultAllowList.table = [];\n    ttDefaultAllowList.tr = [];\n    ttDefaultAllowList.td = ['data-bs-option'];\n    ttDefaultAllowList.th = [];\n    ttDefaultAllowList.div = [];\n    ttDefaultAllowList.tbody = [];\n    ttDefaultAllowList.thead = [];\n\n    $('[data-bs-toggle=\"tooltip\"]').tooltip();\n\n});\n"]}